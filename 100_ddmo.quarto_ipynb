{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "bc0c0ce9",
   "metadata": {},
   "source": [
    "---\n",
    "execute:\n",
    "  cache: false\n",
    "  eval: true\n",
    "  echo: true\n",
    "  warning: false\n",
    "jupyter: python3\n",
    "---\n",
    "\n",
    "\n",
    "# Data-Driven Modeling and Optimization\n",
    "\n",
    "\n",
    "## StatQuest Videos\n",
    "\n",
    "### June, 11th 2024\n",
    "\n",
    "#### Histograms\n",
    "\n",
    "* Video: [Histograms, Clearly Explained](https://youtu.be/qBigTkBLU6g)\n",
    "\n",
    "::: {#exr-histograms}\n",
    "###  Histograms\n",
    "Problems with histograms?\n",
    ":::\n",
    "\n",
    "#### Probability Distributions\n",
    "\n",
    "* Video: [The Main Ideas behind Probability Distributions](https://youtu.be/oI3hZJqXJuc)\n",
    "\n",
    "::: {#exr-small-bins}\n",
    "###  Smaller Bins\n",
    "What happens when we use smaller bins in a histogram?\n",
    ":::\n",
    "\n",
    "::: {#exr-curve}\n",
    "###  Density Curve\n",
    "Why plot a curve to approximate a histogram?\n",
    ":::\n",
    "\n",
    "\n",
    "#### Normal Distribution\n",
    "\n",
    "* Video: [The Normal Distribution, Clearly Explained!!!](https://youtu.be/rzFX5NWojp0)\n",
    "\n",
    "::: {#exr-2SD}\n",
    "###  TwoSDQuestion\n",
    "How many samples are plus/minus two SD around the mean?\n",
    ":::\n",
    "\n",
    "\n",
    "::: {#exr-2SD1}\n",
    "###  OneSDQuestion\n",
    "How many samples are plus/minus one SD around the mean?\n",
    ":::\n",
    "\n",
    "::: {#exr-2SD2}\n",
    "###  ThreeSDQuestion\n",
    "How many samples are plus/minus three SD around the mean?\n",
    ":::\n",
    "\n",
    "\n",
    "::: {#exr-2SD3}\n",
    "###  DataRangeQuestion\n",
    "You have a mean at 100 and a SD of 10. Where are 95% of the data?\n",
    ":::\n",
    "\n",
    "\n",
    "::: {#exr-2SD4}\n",
    "###  PeakHeightQuestion\n",
    "If the peak is very high, is the SD low or high?\n",
    ":::\n",
    "\n",
    "\n",
    "#### The mean, the media, and the mode\n",
    "\n",
    "#### The exponential distribution\n",
    "\n",
    "#### Population and Estimated Parameters\n",
    "\n",
    "* Video: [Population and Estimated Parameters, Clearly Explained](https://youtu.be/vikkiwjQqfU)\n",
    "\n",
    "::: {#exr-POP1}\n",
    "### ProbabilityQuestion\n",
    "If we have a certain curve and want to calculate the probability of values equal to 20 if the mean is 20.\n",
    ":::\n",
    "\n",
    "#### Mean, Variance, and Standard Deviation\n",
    "\n",
    "* Video: [Calculating the Mean, Variance, and Standard Deviation](https://youtu.be/SzZ6GpcfoQY)\n",
    "\n",
    "::: {#exr-CAL1}\n",
    "### MeanDifferenceQuestion\n",
    "The difference between $\\mu$ and x-bar?\n",
    ":::\n",
    "\n",
    "::: {#exr-CAL2}\n",
    "### EstimateMeanQuestion\n",
    "How do you calculate the sample mean?\n",
    ":::\n",
    "\n",
    "\n",
    "::: {#exr-CAL3}\n",
    "### SigmaSquaredQuestion\n",
    "What is sigma squared?\n",
    ":::\n",
    "\n",
    "\n",
    "::: {#exr-CAL4}\n",
    "### EstimatedSDQuestion\n",
    "What is the formula for the estimated standard deviation?\n",
    ":::\n",
    "\n",
    "\n",
    "::: {#exr-CAL5}\n",
    "### VarianceDifferenceQuestion\n",
    "Difference between the variance and the estimated variance?\n",
    ":::\n",
    "\n",
    "\n",
    "### Mathematical Models\n",
    "\n",
    "* Video: [What is a mathematical model?](https://www.youtube.com/watch?v=yQhTtdq_y9M)\n",
    "\n",
    "::: {#exr-MAT1}\n",
    "### ModelBenefitsQuestion\n",
    "What are the benefits of using models?\n",
    ":::\n",
    "\n",
    "#### Sampling from a Distribution\n",
    "\n",
    "* Vidoe: [Sampling from a Distribution, Clearly Explained!!!](https://youtu.be/XLCWeSVzHUU)\n",
    "\n",
    "::: {#exr-SAM1}\n",
    "### SampleDefinitionQuestion\n",
    "What is a sample in statistics?\n",
    ":::\n",
    "\n",
    "\n",
    "### Hypothesis Testing and the Null-Hypothesis\n",
    "\n",
    "::: {#exr-Hyp1}\n",
    "### RejectHypothesisQuestion\n",
    "What does it mean to reject a hypothesis?\n",
    ":::\n",
    "\n",
    "\n",
    "::: {#exr-Hyp2}\n",
    "### NullHypothesisQuestion\n",
    "What is a null hypothesis?\n",
    ":::\n",
    "\n",
    "\n",
    "::: {#exr-Hyp3}\n",
    "### BetterDrugQuestion\n",
    "How can you show that you have found a better drug?\n",
    ":::\n",
    "\n",
    "\n",
    "#### Alternative Hypotheses, Main Ideas\n",
    "\n",
    "#### p-values: What they are and how to interpret them\n",
    "\n",
    "::: {#exr-PVal1}\n",
    "### PValueIntroductionQuestion\n",
    "What is the reason for introducing the p-value?\n",
    ":::\n",
    "\n",
    "\n",
    "::: {#exr-PVal2}\n",
    "### PValueRangeQuestion\n",
    "Is there any range for p-values? Can it be negative?\n",
    ":::\n",
    "\n",
    "\n",
    "::: {#exr-PVal3}\n",
    "### PValueRangeQuestion\n",
    "Is there any range for p-values? Can it be negative?\n",
    ":::\n",
    "\n",
    "\n",
    "::: {#exr-PVal4}\n",
    "### TypicalPValueQuestion\n",
    "What are typical values of the p-value and what does it mean? 5%?\n",
    ":::\n",
    "\n",
    "::: {#exr-PVal5}\n",
    "### FalsePositiveQuestion\n",
    "What is a false-positive?\n",
    ":::\n",
    "\n",
    "\n",
    "#### How to calculate p-values\n",
    "\n",
    "::: {#exr-Calc1}\n",
    "### CalculatePValueQuestion\n",
    "How to calculate p-value?\n",
    ":::\n",
    "\n",
    "\n",
    "::: {#exr-Calc2}\n",
    "### SDCalculationQuestion\n",
    "What is the SD if the mean is 155 and in the range from 142 - 169 there are 95% of the data?\n",
    ":::\n",
    "\n",
    "\n",
    "::: {#exr-Calc3}\n",
    "### SidedPValueQuestion\n",
    "When do we need the two-sided p-value and when the one-sided?\n",
    ":::\n",
    "\n",
    "\n",
    "::: {#exr-Calc4}\n",
    "### CoinTestQuestion\n",
    "Test a coin with Tail-Head-Head. What is the p-value?\n",
    ":::\n",
    "\n",
    "\n",
    "::: {#exr-Calc5}\n",
    "### BorderPValueQuestion\n",
    "If you get exactly the 0.05 border value, can you reject?\n",
    ":::\n",
    "\n",
    "\n",
    "::: {#exr-Calc6}\n",
    "### OneSidedPValueCautionQuestion\n",
    "Why should you be careful with a one-sided p-test?\n",
    ":::\n",
    "\n",
    "\n",
    "::: {#exr-Calc7}\n",
    "### BinomialDistributionQuestion\n",
    "What is the binomial distribution?\n",
    ":::\n",
    "\n",
    "#### p-hacking: What it is and how to avoid it\n",
    "\n",
    "::: {#exr-Hack1}\n",
    "### PHackingWaysQuestion\n",
    "Name two typical ways of p-hacking.\n",
    ":::\n",
    "\n",
    "\n",
    "::: {#exr-Hack2}\n",
    "### AvoidPHackingQuestion\n",
    "How can p-hacking be avoided?\n",
    ":::\n",
    "\n",
    "\n",
    "::: {#exr-Hack3}\n",
    "### MultipleTestingProblemQuestion\n",
    "What is the multiple testing problem?\n",
    ":::\n",
    "\n",
    "\n",
    "#### Covariance\n",
    "\n",
    "::: {#exr-Cov1}\n",
    "### CovarianceDefinitionQuestion\n",
    "What is covariance?\n",
    ":::\n",
    "\n",
    "\n",
    "::: {#exr-Cov2}\n",
    "### CovarianceMeaningQuestion\n",
    "What is the meaning of covariance?\n",
    ":::\n",
    "\n",
    "\n",
    "::: {#exr-Cov3}\n",
    "### CovarianceVarianceRelationshipQuestion\n",
    "What is the relationship between covariance and variance?\n",
    ":::\n",
    "\n",
    "::: {#exr-Cov4}\n",
    "### HighCovarianceQuestion\n",
    "If covariance is high, is there a strong relationship?\n",
    ":::\n",
    "\n",
    "::: {#exr-Cov5}\n",
    "### ZeroCovarianceQuestion\n",
    "What if the covariance is zero?\n",
    ":::\n",
    "\n",
    "\n",
    "::: {#exr-Cov6}\n",
    "### NegativeCovarianceQuestion\n",
    "Can covariance be negative?\n",
    ":::\n",
    "\n",
    "\n",
    "::: {#exr-Cov7}\n",
    "### NegativeVarianceQuestion\n",
    "Can variance be negative?\n",
    ":::\n",
    "\n",
    "\n",
    "#### Pearson's Correlation\n",
    "\n",
    "Video: [Pearson's Correlation, Clearly Explained]\n",
    "\n",
    "::: {#exr-Corr1}\n",
    "### CorrelationValueQuestion\n",
    "What do you do if the correlation value is 10?\n",
    ":::\n",
    "\n",
    "\n",
    "::: {#exr-Corr2}\n",
    "### CorrelationRangeQuestion\n",
    "What is the possible range of correlation values?\n",
    ":::\n",
    "\n",
    "\n",
    "::: {#exr-Corr3}\n",
    "### CorrelationFormulaQuestion\n",
    "What is the formula for correlation?\n",
    ":::\n",
    "\n",
    "\n",
    "#### Boxplots\n",
    "\n",
    "\n",
    "### June, 18th 2024\n",
    "\n",
    "#### Statistical Power\n",
    "\n",
    "* Video: [Statistical Power, Clearly Explained](https://youtu.be/Rsc5znwR5FA?si=Ca4e-EopumAtgl8Q)\n",
    "\n",
    "::: {#exr-StatPow1}\n",
    "### UnderstandingStatisticalPower\n",
    "What is the definition of power in a statistical test?\n",
    ":::\n",
    "\n",
    "\n",
    "::: {#exr-StatPow2}\n",
    "### DistributionEffectOnPower\n",
    "What is the implication for power analysis if the samples come from the same distribution?\n",
    ":::\n",
    "\n",
    "::: {#exr-StatPow3}\n",
    "### IncreasingPower\n",
    "How can you increase the power if the distributions are very similar?\n",
    ":::\n",
    "\n",
    "\n",
    "::: {#exr-StatPow4}\n",
    "### PreventingPHacking\n",
    "What should be done to avoid p-hacking when the distributions are close to each other?\n",
    ":::\n",
    "\n",
    "::: {#exr-StatPow5}\n",
    "### SampleSizeAndPower\n",
    "If there is overlap and the sample size is small, will the power be high or low?\n",
    ":::\n",
    "\n",
    "#### Power Analysis\n",
    "\n",
    "* Video: [Power Analysis, Clearly Explained!!!](https://youtu.be/VX_M3tIyiYk?si=Vb6Fr1aJWQU5Ujjp)\n",
    "\n",
    "::: {#exr-PowAn1}\n",
    "### FactorsAffectingPower\n",
    "Which are the two main factors that affect power?\n",
    ":::\n",
    "\n",
    "\n",
    "::: {#exr-PowAn2}\n",
    "### PurposeOfPowerAnalysis\n",
    "What does power analysis tell us?\n",
    ":::\n",
    "\n",
    "\n",
    "::: {#exr-PowAn3}\n",
    "### ExperimentRisks\n",
    "What are the two risks faced when performing an experiment?\n",
    ":::\n",
    "\n",
    "\n",
    "::: {#exr-PowAn4}\n",
    "### PerformingPowerAnalysis\n",
    "How do you perform a power analysis?\n",
    ":::\n",
    "\n",
    "\n",
    "#### The Central Limit Theorem\n",
    "\n",
    "* Video: [The Central Limit Theorem, Clearly Explained!!!](https://youtu.be/YAlJCEDH2uY?si=NRYvP7Y0Mow32jV2)\n",
    "\n",
    "::: {#exr-CenLi1}\n",
    "### CentralLimitTheoremExplanation\n",
    "What does the Central Limit Theorem state?\n",
    ":::\n",
    "\n",
    "#### Boxplots\n",
    "\n",
    "* Video: [Boxplots are Awesome](https://youtu.be/fHLhBnmwUM0?si=QB5ccKIxL1FaIc0M)\n",
    "\n",
    "::: {#exr-BoxPlo1}\n",
    "### MedianInBoxplot\n",
    "What is represented by the middle line in a boxplot?\n",
    ":::\n",
    "\n",
    "\n",
    "::: {#exr-BoxPlo2}\n",
    "### BoxContentInBoxplot\n",
    "What does the box in a boxplot represent?\n",
    ":::\n",
    "\n",
    "\n",
    "#### R-squared\n",
    "\n",
    "* Video: [R-squared, Clearly Explained](https://youtu.be/2AQKmw14mHM)\n",
    "\n",
    "::: {#exr-RSqu1}\n",
    "### RSquaredDefinition\n",
    "What is R-squared? Show the formula.\n",
    ":::\n",
    "\n",
    "\n",
    "::: {#exr-RSqu2}\n",
    "### NegativeRSquared\n",
    "Can the R-squared value be negative?\n",
    ":::\n",
    "\n",
    "\n",
    "::: {#exr-RSqu3}\n",
    "### RSquaredCalculation\n",
    "Perform a calculation involving R-squared.\n",
    ":::\n",
    "\n",
    "\n",
    "#### The main ideas of fitting a line to data (The main ideas of least squares and linear regression.)\n",
    "\n",
    "* Video: [The main ideas of fitting a line to data (The main ideas of least squares and linear regression.)](https://www.youtube.com/embed/PaFPbb66DxQ)\n",
    "\n",
    "::: {#exr-FitLin1}\n",
    "### LeastSquaresMeaning\n",
    "What is the meaning of the least squares method?\n",
    ":::\n",
    "\n",
    "\n",
    "#### Linear Regression\n",
    "\n",
    "* Video: [Linear Regression, Clearly Explained](https://youtu.be/nk2CQITm_eo)\n",
    "\n",
    "#### Multiple Regression\n",
    "\n",
    "* Video: Multiple Regression, Clearly Explained\n",
    "\n",
    "#### A Gentle Introduction to Machine Learning\n",
    "\n",
    "* Video: [A Gentle Introduction to Machine Learning](https://youtu.be/Gv9_4yMHFhI?si=BPtw5Rekl37bJ9V1)\n",
    "\n",
    "::: {#exr-ML1}\n",
    "### RegressionVsClassification\n",
    "What is the difference between regression and classification?\n",
    ":::\n",
    "\n",
    "#### Maximum Likelihood\n",
    "\n",
    "* Video: [Maximum Likelihood, clearly explained!!!](https://youtu.be/XepXtl9YKwc?si=ADMYC10DscaxSTvk)\n",
    "\n",
    "::: {#exr-MaxLike1}\n",
    "### LikelihoodConcept\n",
    "What is the idea of likelihood?\n",
    ":::\n",
    "\n",
    "* Video: [Probability is not Likelihood. Find out why!!!](https://youtu.be/pYxNSUDSFH4?si=eEan9lAUp1NNGEjY)\n",
    "\n",
    "::: {#exr-Prob1}\n",
    "### ProbabilityVsLikelihood\n",
    "What is the difference between probability and likelihood?\n",
    ":::\n",
    "\n",
    "#### Cross-Validation\n",
    "\n",
    "* Video: [Machine Learning Fundamentals: Cross Validation](https://youtu.be/fSytzGwwBVw?si=a8U5yCIEhwAw4AyU)\n",
    "\n",
    "::: {#exr-CroVal1}\n",
    "### TrainVsTestData\n",
    "What is the difference between training and testing data?\n",
    ":::\n",
    "\n",
    "\n",
    "::: {#exr-CroVal2}\n",
    "### SingleValidationIssue\n",
    "What is the problem if you validate the model only once?\n",
    ":::\n",
    "\n",
    "\n",
    "::: {#exr-CroVal3}\n",
    "### FoldDefinition\n",
    "What is a fold in cross-validation?\n",
    ":::\n",
    "\n",
    "\n",
    "::: {#exr-CroVal4}\n",
    "### LeaveOneOutValidation\n",
    "What is leave-one-out cross-validation?\n",
    ":::\n",
    "\n",
    "#### The Confusion Matrix\n",
    "\n",
    "* Video: [Machine Learning Fundamentals: The Confusion Matrix](https://youtu.be/Kdsp6soqA7o?si=pOEUeyk1Crt9heg1)\n",
    "\n",
    "::: {#exr-ConMat1}\n",
    "### DrawingConfusionMatrix\n",
    "Draw the confusion matrix.\n",
    ":::\n",
    "\n",
    "\n",
    "#### Sensitivity and Specificity\n",
    "\n",
    "* Video: [Machine Learning Fundamentals: Sensitivity and Specificity](https://youtu.be/vP06aMoz4v8?si=9O6FfcKtOWSdx84t)\n",
    "\n",
    "::: {#exr-SenSpe1}\n",
    "### SensitivitySpecificityCalculation1\n",
    "Calculate the sensitivity and specificity for a given confusion matrix.\n",
    ":::\n",
    "\n",
    "\n",
    "::: {#exr-SenSpe2}\n",
    "### SensitivitySpecificityCalculation2\n",
    "Calculate the sensitivity and specificity for a given confusion matrix.\n",
    ":::\n",
    "\n",
    "\n",
    "#### Bias and Variance\n",
    "\n",
    "* Video: [Machine Learning Fundamentals: Bias and Variance](https://youtu.be/EuBBz3bI-aA?si=7MVv_J1HbzMSQS4K)\n",
    "\n",
    "::: {#exr-MalLea1}\n",
    "### BiasAndVariance\n",
    "What are bias and variance?\n",
    ":::\n",
    "\n",
    "#### Mutual Information\n",
    "\n",
    "* Video: [Mutual Information, Clearly Explained](https://youtu.be/eJIp_mgVLwE?si=KaeiRN0st1gqkj4c)\n",
    "\n",
    "::: {#exr-MutInf1}\n",
    "### MutualInformationExample\n",
    "Provide an example and calculate if mutual information is high or low.\n",
    ":::\n",
    "\n",
    "\n",
    "### June, 25th 2024\n",
    "\n",
    "#### Principal Component Analysis (PCA)\n",
    "\n",
    "* Video: [Principal Component Analysis (PCA), Step-by-Step](https://youtu.be/FgakZw6K1QQ?si=lmXhc-bpOqb7RmDP)\n",
    "\n",
    "::: {#exr-PCA1}\n",
    "### WhatIsPCA\n",
    "What is PCA?\n",
    ":::\n",
    "\n",
    "\n",
    "::: {#exr-PCA2}\n",
    "### ScreePlotExplanation\n",
    "What is a scree plot?\n",
    ":::\n",
    "\n",
    "* Vidoe: [PCA - Practical Tips](https://youtu.be/oRvgq966yZg?si=TIUsxNItfyYOjTLt)\n",
    "\n",
    "::: {#exr-PCA3}\n",
    "### LeastSquaresInPCA\n",
    "Does PCA use least squares?\n",
    ":::\n",
    "\n",
    "\n",
    "::: {#exr-PCA4}\n",
    "### PCASteps\n",
    "Which steps are performed by PCA?\n",
    ":::\n",
    "\n",
    "\n",
    "::: {#exr-PCA5}\n",
    "### EigenvaluePC1\n",
    "What is the eigenvalue of the first principal component?\n",
    ":::\n",
    "\n",
    "\n",
    "::: {#exr-PCA6}\n",
    "### DifferencesBetweenPoints\n",
    "Are the differences between red and yellow the same as the differences between red and blue points?\n",
    ":::\n",
    "\n",
    "* Video: [PCA in Python](https://youtu.be/Lsue2gEM9D0?si=_fV_RzK8j1jwcb-e)\n",
    "\n",
    "::: {#exr-PCA7}\n",
    "### ScalingInPCA\n",
    "How to scale data in PCA?\n",
    ":::\n",
    "\n",
    "\n",
    "::: {#exr-PCA8}\n",
    "### DetermineNumberOfComponents\n",
    "How to determine the number of principal components?\n",
    ":::\n",
    "\n",
    "\n",
    "::: {#exr-PCA9}\n",
    "### LimitingNumberOfComponents\n",
    "How is the number of principal components limited?\n",
    ":::\n",
    "\n",
    "\n",
    "### t-SNE\n",
    "\n",
    "* Video: [t-SNE, Clearly Explained](https://youtu.be/NEaUSP4YerM?si=f8-6ewwv5TMD7gdL)\n",
    "\n",
    "::: {#exr-tSNE1}\n",
    "### WhyUseTSNE\n",
    "Why use t-SNE?\n",
    ":::\n",
    "\n",
    "\n",
    "::: {#exr-tSNE2}\n",
    "### MainIdeaOfTSNE\n",
    "What is the main idea of t-SNE?\n",
    ":::\n",
    "\n",
    "\n",
    "::: {#exr-tSNE3}\n",
    "### BasicConceptOfTSNE\n",
    "What is the basic concept of t-SNE?\n",
    ":::\n",
    "\n",
    "\n",
    "::: {#exr-tSNE4}\n",
    "### TSNESteps\n",
    "What are the steps in t-SNE?\n",
    ":::\n",
    "\n",
    "\n",
    "### K-means clustering\n",
    "\n",
    "* Video: [K-means clustering](https://youtu.be/4b5d3muPQmA?si=O9-s32Kw676wXCQF)\n",
    "\n",
    "::: {#exr-KMeans1}\n",
    "### HowKMeansWorks\n",
    "How does K-means clustering work?\n",
    ":::\n",
    "\n",
    "\n",
    "::: {#exr-KMeans2}\n",
    "### QualityOfClusters\n",
    "How can the quality of the resulting clusters be calculated?\n",
    ":::\n",
    "\n",
    "\n",
    "::: {#exr-KMeans3}\n",
    "### IncreasingK\n",
    "Why is it not a good idea to increase k too much?\n",
    ":::\n",
    "\n",
    "\n",
    "### DBSCAN\n",
    "\n",
    "* Video: [Clustering with DBSCAN, Clearly Explained!!!](https://youtu.be/RDZUdRSDOok?si=C7SzTAQC8BmD8AZy)\n",
    "\n",
    "::: {#exr-DBSCAN1}\n",
    "### CorePointInDBSCAN\n",
    "What is a core point in DBSCAN?\n",
    ":::\n",
    "\n",
    "\n",
    "::: {#exr-DBSCAN2}\n",
    "### AddingVsExtending\n",
    "What is the difference between adding and extending in DBSCAN?\n",
    ":::\n",
    "\n",
    "\n",
    "::: {#exr-DBSCAN3}\n",
    "### OutliersInDBSCAN\n",
    "What are outliers in DBSCAN?\n",
    ":::\n",
    "\n",
    "\n",
    "### K-nearest neighbors\n",
    "\n",
    "* Video: [StatQuest: K-nearest neighbors, Clearly Explained](https://youtu.be/HVXime0nQeI?si=wTGGkn_6vIshrTk0)\n",
    "\n",
    "::: {#exr-KNN1}\n",
    "### AdvantagesAndDisadvantagesOfK\n",
    "What are the advantages and disadvantages of k = 1 and k = 100 in K-nearest neighbors?\n",
    ":::\n",
    "\n",
    "\n",
    "### Naive Bayes\n",
    "\n",
    "* Video: [Naive Bayes, Clearly Explained!!!](https://youtu.be/O2L2Uv9pdDA?si=CTRhu0XXwTZuxxwS)\n",
    "\n",
    "::: {#exr-NaiveBayes1}\n",
    "### NaiveBayesFormula\n",
    "What is the formula for Naive Bayes?\n",
    ":::\n",
    "\n",
    "::: {#exr-NaiveBayes2}\n",
    "### CalculateProbabilities\n",
    "Calculate the probabilities for a given example using Naive Bayes.\n",
    ":::\n",
    "\n",
    "\n",
    "### Gaussian Naive Bayes\n",
    "\n",
    "* Video: [Gaussian Naive Bayes, Clearly Explained!!!](https://youtu.be/H3EjCKtlVog?si=cXWTWaQ1cw5wbFXr)\n",
    "\n",
    "::: {#exr-GaussianNB1}\n",
    "### UnderflowProblem\n",
    "Why is underflow a problem in Gaussian Naive Bayes?\n",
    ":::\n",
    "\n",
    "\n",
    "\n",
    "### July, 2nd 2024\n",
    "\n",
    "#### [Decision and Classification Trees, Clearly Explained](https://youtu.be/_L39rN6gz7Y?si=KtY-CsLGeAbIJN-f)\n",
    "\n",
    "#### [StatQuest: Decision Trees, Part 2 - Feature Selection and Missing Data](https://youtu.be/wpNl-JwwplA?si=R7qiQ4rVzsrW1GAI)\n",
    "\n",
    "#### [Regression Trees, Clearly Explained!!!](https://youtu.be/g9c66TUylZ4?si=aXOCqkDl-fGAFRx2)\n",
    "\n",
    "#### [How to Prune Regression Trees, Clearly Explained!!!](https://youtu.be/D0efHEJsfHo?si=OKizIPtcrWDOSCRF)\n",
    "\n",
    "\n",
    "#### Trees\n",
    "\n",
    "::: {#exr-Tree1}\n",
    "### Tree Usage\n",
    "For what can we use trees? \n",
    ":::\n",
    "\n",
    "\n",
    "#### Decision Trees\n",
    "\n",
    "::: {#exr-DTree1}\n",
    "### Tree Usage\n",
    "\n",
    "Based on a shown tree graph: \n",
    "\n",
    "* How can you use this tree? \n",
    "* What is the root node? \n",
    "* What are branches and internal nodes? \n",
    "* What are the leafs? \n",
    "* Are the leafs pure or impure? \n",
    "* Which of the leafs is more impure? \n",
    ":::\n",
    "\n",
    "\n",
    "\n",
    "::: {#exr-DTree2}\n",
    "### Tree Feature Importance\n",
    "Is the most or least important feature on top? \n",
    ":::\n",
    "\n",
    "\n",
    "\n",
    "::: {#exr-DTree3}\n",
    "### Tree Feature Imputation\n",
    "How can you fill a gap/missing data? \n",
    ":::\n",
    "\n",
    "::: {#sol-DTree3}\n",
    "### Tree Feature Imputation\n",
    "* Mean\n",
    "* Median\n",
    "* Comparing to column with high correlation\n",
    ":::\n",
    "\n",
    "#### Regression Trees\n",
    "\n",
    "::: {#exr-RTree1}\n",
    "### Regression Tree Limitations\n",
    "What are limitations? \n",
    ":::\n",
    "\n",
    "\n",
    "::: {#exr-RTree2}\n",
    "### Regression Tree Score\n",
    "How is the tree score calculated? \n",
    ":::\n",
    "\n",
    "\n",
    "\n",
    "::: {#exr-RTree3}\n",
    "### Regression Tree Alpha Value Small\n",
    "What can we say about the tree if the alpha value is small? \n",
    ":::\n",
    "\n",
    "\n",
    "::: {#exr-RTree4}\n",
    "### Regression Tree Increase Alpha Value \n",
    "What happens if you increase alpha? \n",
    ":::\n",
    "\n",
    "\n",
    "\n",
    "::: {#exr-RTree5}\n",
    "### Regression Tree Pruning\n",
    "What is the meaning of pruning? \n",
    ":::\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "### Additional Videos\n",
    "\n",
    "* [Odds and Log(Odds), Clearly Explained!!!](https://youtu.be/ARfXDSkQf1Y?si=E4TjFoloRjbQYbzQ)\n",
    "* [One-Hot, Label, Target and K-Fold Target Encoding, Clearly Explained!!!](https://youtu.be/589nCGeWG1w?si=YN9vO0HQlnll1wb6)\n",
    "* [Maximum Likelihood for the Exponential Distribution, Clearly Explained!!!](https://youtu.be/p3T-_LMrvBc?si=3Jcjueue1otXzS1r)\n",
    "* [ROC and AUC, Clearly Explained!](https://youtu.be/4jRBRDbJemM?si=hJXxjRV7_Ib2ckVe)\n",
    "* [Entropy (for data science) Clearly Explained!!!](https://youtu.be/YtebGVx-Fxw?si=xbMzfX2oqAsE6MGK)\n",
    "* [Classification Trees in Python from Start to Finish](https://youtu.be/q90UDEgYqeI?si=teRC5oYkHcXXgUSU): Long live video!\n",
    "\n",
    "\n",
    "\n",
    "## Introduction to Statistical Learning\n",
    "\n",
    "\n",
    "::: {.callout-note}\n",
    "\n",
    "Parts of this course are based on the book **An Introduction to Statistical Learning**, @Jame14a.\n",
    "Some of the figures in this presentation are taken from **An Introduction to Statistical Learning** (Springer, 2013) with permission from the authors: G. James, D. Witten,  T. Hastie and R. Tibshirani.\n",
    ":::\n",
    "\n",
    "### Opening Remarks and Examples\n",
    "\n",
    "* Artificial Intelligence (AI)\n",
    "* Machine learning (ML)\n",
    "* Deep Learning (DL)\n",
    "\n",
    "![AI, ML, and DL. Taken fron @chol18b](./figures_static/aimldl.png)\n",
    "\n",
    "\n",
    "* 1980's neural networks.\n",
    "* Statistical learning.\n",
    "* IBM Watson supercomputer.\n",
    "\n",
    "\n",
    "Statistical learning problems include:\n",
    "\n",
    "1. Identification of prostate cancer through PSA and other measurements such as age, Gleason score, etc. Scatter plots help reveal the nature of the data and its correlations. Using transformed data (log scale) can highlight typos in the data; for example, a patient with a 449-gram prostate. Recommendation: Always examine the data before conducting any sophisticated analysis.\n",
    "2. Classification of phonemes, specifically between \"aa\" and \"ao.\"\n",
    "3. Prediction of heart attacks, which can be visualized through colored scatter plots.\n",
    "4. Detection of email spam, based on the frequency of words within the messages, using 57 features.\n",
    "5. Identification of numbers in handwritten zip codes, which involves pattern recognition.\n",
    "6. Classification of tissue samples into cancer classes based on gene expression profiles, utilizing heat maps for visualization.\n",
    "7. Establishing the relationship between salary and demographic variables like income (wage) versus age, year, and education level, employing regression models.\n",
    "8. Classification of pixels in LANDSAT images by their usage, using nearest neighbor methods.\n",
    "\n",
    "\n",
    "\n",
    "#### Supervised and Unsupervised Learning\n",
    "\n",
    "Two important types: supervised and unsupervised learning.\n",
    "There is even more, e.g., semi-supervised learning.\n",
    "\n",
    "##### Starting point\n",
    "\n",
    "* Outcome measurement $Y$ (dependent variable, response, target).\n",
    "* Vector of $p$ predictor measurements $X$ (inputs, regressors, covariates, features, independent variables).\n",
    "* Training data $(x_1, y1), \\ldots ,(x_N, y_N)$. These are observations (examples, instances) of these measurements.\n",
    "\n",
    "In the *regression* problem, $Y$ is quantitative (e.g., price, blood pressure).\n",
    "In the *classification* problem, $Y$ takes values in a finite, unordered set (e.g., survived/died, digit 0-9, cancer class of tissue sample).\n",
    "\n",
    "##### Philosophy\n",
    "\n",
    "It is important to understand the ideas behind the various techniques,\n",
    "in order to know how and when to use them.\n",
    "One has to understand the simpler methods first, in order to grasp the more sophisticated ones.\n",
    "It is important to accurately assess the performance of a method,\n",
    "to know how well or how badly it is working (simpler methods often perform as well as fancier ones!)\n",
    "This is an exciting research area, having important applications in science, industry and finance.\n",
    "Statistical learning is a fundamental ingredient in the training of a modern data scientist.\n",
    "\n",
    "\n",
    "## Basics\n",
    "\n",
    "### Histograms\n",
    "\n",
    "Creating a histogram and calculating the probabilities from a dataset can be approached with scientific precision\n",
    "\n",
    "1. Data Collection: Obtain the dataset you wish to analyze. This dataset could represent any quantitative measure, such to examine its distribution.\n",
    "\n",
    "2. Decide on the Number of Bins: The number of bins influences the histogram's granularity. There are several statistical rules to determine an optimal number of bins:\n",
    "   * Square-root rule: suggests using the square root of the number of data points as the number of bins.\n",
    "   * Sturges' formula: $k = 1 + 3.322 \\log_{10}(n)$, where $n$ is the number of data points and $k$ is the suggested number of bins.\n",
    "   * Freedman-Diaconis rule: uses the interquartile range (IQR) and the cube root of the number of data points $n$ to calculate bin width as $2 \\dfrac{IQR}{n^{1/3}}$.\n",
    "\n",
    "3. Determine Range and Bin Width: Calculate the range of data by subtracting the minimum data point value from the maximum. Divide this range by the number of bins to determine the width of each bin.\n",
    "\n",
    "4. Allocate Data Points to Bins: Iterate through the data, sorting each data point into the appropriate bin based on its value.\n",
    "\n",
    "5. Draw the Histogram: Use a histogram to visualize the frequency or relative frequency (probability) of data points within each bin.\n",
    "\n",
    "6. Calculate Probabilities: The relative frequency of data within each bin represents the probability of a randomly selected data point falling within that bin's range.\n",
    "\n",
    "Below is a Python script that demonstrates how to generate a histogram and compute probabilities using the `matplotlib` library for visualization and `numpy` for data manipulation.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "fig-histogram",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0.5, 1.0, 'Histogram with Probability Density')"
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 672x480 with 1 Axes>"
      ]
     },
     "metadata": {
      "image/png": {
       "height": 449,
       "width": 597
      }
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "#| label: fig-histogram\n",
    "#| fig-cap: Histogram with Probability Density\n",
    "\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "%matplotlib inline\n",
    "\n",
    "# Sample data: Randomly generated for demonstration\n",
    "data = np.random.normal(0, 1, 1000)  # 1000 data points with a normal distribution\n",
    "\n",
    "# Step 2: Decide on the number of bins\n",
    "num_bins = int(np.ceil(1 + 3.322 * np.log10(len(data))))  # Sturges' formula\n",
    "\n",
    "# Step 3: Determine range and bin width -- handled internally by matplotlib\n",
    "\n",
    "# Steps 4 & 5: Sort data into bins and draw the histogram\n",
    "fig, ax = plt.subplots()\n",
    "n, bins, patches = ax.hist(data, bins=num_bins, density=True, alpha=0.75, edgecolor='black')\n",
    "\n",
    "# Calculate probabilities (relative frequencies) manually, if needed\n",
    "bin_width = np.diff(bins)  # np.diff finds the difference between adjacent bin boundaries\n",
    "probabilities = n * bin_width  # n is already normalized to form a probability density if `density=True`\n",
    "\n",
    "# Adding labels and title for clarity\n",
    "ax.set_xlabel('Data Value')\n",
    "ax.set_ylabel('Probability Density')\n",
    "ax.set_title('Histogram with Probability Density')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "1180716c",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Bin 1 Probability: 0.0120\n",
      "Bin 2 Probability: 0.0190\n",
      "Bin 3 Probability: 0.0740\n",
      "Bin 4 Probability: 0.1590\n",
      "Bin 5 Probability: 0.2160\n",
      "Bin 6 Probability: 0.2070\n",
      "Bin 7 Probability: 0.1640\n",
      "Bin 8 Probability: 0.0960\n",
      "Bin 9 Probability: 0.0380\n",
      "Bin 10 Probability: 0.0120\n",
      "Bin 11 Probability: 0.0030\n",
      "Sum of probabilities: 0.9999999999999999\n"
     ]
    }
   ],
   "source": [
    "for i, prob in enumerate(probabilities):\n",
    "    print(f\"Bin {i+1} Probability: {prob:.4f}\")\n",
    "\n",
    "# Ensure probabilities sum to 1 (or very close, due to floating-point arithmetic)\n",
    "print(f\"Sum of probabilities: {np.sum(probabilities)}\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "55daa4ed",
   "metadata": {},
   "source": [
    "This code segment goes through the necessary steps to generate a histogram and calculate probabilities for a synthetic dataset. It demonstrates important scientific and computational practices including binning, visualization, and probability calculation in Python.\n",
    "\n",
    "Key Points:\n",
    "- The histogram represents the distribution of data, with the histogram's bins outlining the data's spread and density.\n",
    "- The option `density=True` in `ax.hist()` normalizes the histogram so that the total area under the histogram sums to 1, thereby converting frequencies to probability densities.\n",
    "- The choice of bin number and width has a significant influence on the histogram's shape and the insights that can be drawn from it, highlighting the importance of selecting appropriate binning strategies based on the dataset's characteristics and the analysis objectives.\n",
    "\n",
    "\n",
    "### Probability Distributions\n",
    "\n",
    "What happens when we use smaller bins in a histogram? The histogram becomes more detailed, revealing the distribution of data points with greater precision. However, as the bin size decreases, the number of data points within each bin may decrease, leading to sparse or empty bins. This sparsity can make it challenging to estimate probabilities accurately, especially for data points that fall within these empty bins.\n",
    "\n",
    "Advantages, when using a probability distribution, include:\n",
    "\n",
    "  * Blanks can be filled\n",
    "  * Probabilities can be calculated\n",
    "  * Parameters are sufficiemnt to describe the distribution, e.g., mean and variance for the normal distribution\n",
    "\n",
    "Probability distributions offer a powerful solution to the challenges posed by limited data in estimating probabilities. When data is scarce, constructing a histogram to determine the probability of certain outcomes can lead to inaccurate or unreliable results due to the lack of detail in the dataset. However, collecting vast amounts of data to populate a histogram for more precise estimates can often be impractical, time-consuming, and expensive.\n",
    "\n",
    "A probability distribution is a mathematical function that provides the probabilities of occurrence of different possible outcomes for an experiment. It is a more efficient approach to understanding the likelihood of various outcomes than relying solely on extensive data collection. For continuous data, this is often represented graphically by a smooth curve.\n",
    "\n",
    "#### The Normal Distribution: A Common Example\n",
    "\n",
    "A commonly encountered probability distribution is the normal distribution, known for its characteristic bell-shaped curve. This curve represents how the values of a variable are distributed: most of the observations cluster around the mean (or center) of the distribution, with frequencies gradually decreasing as values move away from the mean.\n",
    "\n",
    "The normal distribution is particularly useful because of its defined mathematical properties. It is determined entirely by its mean (mu, $\\mu$) and its standard deviation (sigma, $\\sigma$). The area under the curve represents probability, making it possible to calculate the likelihood of a random variable falling within a specific range.\n",
    "\n",
    "#### Practical Example: Estimating Probabilities\n",
    "\n",
    "Consider we are interested in the heights of adults in a population. Instead of measuring the height of every adult (which would be impractical), we can use the normal distribution to estimate the probability of adults' heights falling within certain intervals, assuming we know the mean and standard deviation of the heights.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "fig-normal-distribution",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 672x480 with 1 Axes>"
      ]
     },
     "metadata": {
      "image/png": {
       "height": 429,
       "width": 605
      }
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "#| label: fig-normal-distribution\n",
    "#| fig-cap: Normal Distribution Curve with Highlighted Probability Area. 95 percent of the data falls within two standard deviations of the mean.\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "from scipy.stats import norm\n",
    "mu = 170  # e.g., mu height of adults in cm\n",
    "sd = 10  # e.g., standard deviation of heights in cm\n",
    "heights = np.linspace(mu - 3*sd, mu + 3*sd, 1000)\n",
    "# Calculate the probability density function for the normal distribution\n",
    "pdf = norm.pdf(heights, mu, sd)\n",
    "# Plot the normal distribution curve\n",
    "plt.plot(heights, pdf, color='blue', linewidth=2)\n",
    "plt.fill_between(heights, pdf, where=(heights >= mu - 2 * sd) & (heights <= mu + 2*sd), color='grey', alpha=0.5)\n",
    "plt.xlabel('Height (cm)')\n",
    "plt.ylabel('Probability Density')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1eaea7f0",
   "metadata": {},
   "source": [
    "This Python code snippet generates a plot of the normal distribution for adult heights, with a mean of 170 cm and a standard deviation of 10 cm. It visually approximates a histogram with a blue bell-shaped curve, and highlights (in grey) the area under the curve between $\\mu \\pm 2 \\times \\sigma$.\n",
    "This area corresponds to the probability of randomly selecting an individual whose height falls within this range. \n",
    "\n",
    "By using the area under the curve, we can efficiently estimate probabilities without needing to collect and analyze a vast amount of data. This method not only saves time and resources but also provides a clear and intuitive way to understand and communicate statistical probabilities.\n",
    "\n",
    "### Discrete Distributions\n",
    "\n",
    "Discrete probability distributions are essential tools in statistics, providing a mathematical foundation to model and analyze situations with discrete outcomes. \n",
    "Histograms, which can be seen as discrete distributions with data organized into bins, offer a way to visualize and estimate probabilities based on the collected data. However, they come with limitations, especially when data is scarce or when we encounter gaps in the data (blank spaces in histograms). These gaps can make it challenging to accurately estimate probabilities.\n",
    "\n",
    "A more efficient approach, especially for discrete data, is to use mathematical equations---particularly those defining discrete probability distributions---to calculate probabilities directly, thus bypassing the intricacies of data collection and histogram interpretation.\n",
    "\n",
    "#### Bernoulli Distribution\n",
    "\n",
    "The Bernoulli distribution, named after Swiss scientist Jacob Bernoulli, is a discrete probability distribution, which takes value $1$ with success probability $p$ and value $0$ with failure probability $q = 1-p$. So if $X$ is a random variable with this distribution, we have:\n",
    "$$\n",
    "P(X=1) = 1-P(X=0) = p = 1-q.\n",
    "$$\n",
    "\n",
    "#### Binomial Distribution\n",
    "\n",
    "The Binomial Distribution is a prime example of a discrete probability distribution that is particularly useful for binary outcomes (e.g., success/failure, yes/no, pumpkin pie/blueberry pie). It leverages simple mathematical principles to calculate the probability of observing a specific number of successes (preferred outcomes) in a fixed number of trials, given the probability of success in each trial.\n",
    "\n",
    "#### An Illustrative Example: Pie Preference\n",
    "\n",
    "Consider a scenario from \"StatLand\" where 70% of people prefer pumpkin pie over blueberry pie. The question is: What is the probability that, out of three people asked, the first two prefer pumpkin pie and the third prefers blueberry pie?\n",
    "\n",
    "Using the concept of the Binomial Distribution, the probability of such an outcome can be calculated without the need to layout every possible combination by hand. This process not only simplifies calculations but also provides a clear and precise method to determine probabilities in scenarios involving discrete choices.\n",
    "We will use Python to calculate the probability of observing exactly two out of three people prefer pumpkin pie, given the 70% preference rate:\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "aa826508",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The probability that exactly 2 out of 3 people prefer pumpkin pie is: 0.441\n"
     ]
    }
   ],
   "source": [
    "from scipy.stats import binom\n",
    "n = 3  # Number of trials (people asked)\n",
    "p = 0.7  # Probability of success (preferring pumpkin pie)\n",
    "x = 2  # Number of successes (people preferring pumpkin pie)\n",
    "# Probability calculation using Binomial Distribution\n",
    "prob = binom.pmf(x, n, p)\n",
    "print(f\"The probability that exactly 2 out of 3 people prefer pumpkin pie is: {prob:.3f}\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ff0ed545",
   "metadata": {},
   "source": [
    "This code uses the `binom.pmf()` function from `scipy.stats` to calculate the probability mass function (PMF) of observing exactly `x` successes in `n` trials, where each trial has a success probability of `p`.\n",
    "\n",
    "A Binomial random variable is the sum of $n$ independent, identically distributed Bernoulli random variables, each with probability $p$ of success. \n",
    "We may indicate a random variable $X$ with Bernoulli distribution using the notation $X \\sim \\mathrm{Bi}(1,\\theta)$. Then, the notation for the Binomial is\n",
    "$X \\sim \\mathrm{Bi}(n,\\theta)$. Its probability and distribution functions are, respectively,\n",
    "$$\n",
    "p_X(x) = {n\\choose x}\\theta^x(1-\\theta)^{n-x}, \\qquad F_X(x) = \\Pr\\{X \\le x\\} = \\sum_{i=0}^{x} {n\\choose i}\\theta^i(1-\\theta)^{n-i}.\n",
    "$$\n",
    "\n",
    "The mean of the binomial distribution is $\\text{E}[X] = n\\theta$. \n",
    "The variance of the distribution is $\\text{Var}[X] = n\\theta(1-\\theta)$ (see next section).\n",
    "\n",
    "A process consists of a sequence of $n$ independent trials, i.e., the outcome of each trial does not depend on the outcome of previous trials.\n",
    "The outcome of each trial is either a success or a failure. The probability of success is denoted as $p$, and $p$ is constant for\n",
    "each trial. Coin tossing is a classical example for this setting.\n",
    "\n",
    "The binomial distribution is a statistical distribution giving the probability of obtaining a specified number of successes in a binomial experiment;\n",
    "written Binomial(n, p), where $n$ is the number of trials, and $p$ the probability of success in each.\n",
    "\n",
    "::: {#def-binom}\n",
    "\n",
    "#### Binomial Distribution\n",
    "\n",
    "The binomial distribution with parameters $n$ and $p$,\n",
    "where $n$ is the number of trials, and $p$ the probability of success in each, is\n",
    "\\begin{equation}\n",
    "p(x) = { n \\choose k } p^x(1-p)^{n-x} \\qquad x = 0,1, \\ldots, n.\n",
    "\\end{equation}\n",
    "The mean $\\mu$ and the variance $\\sigma^2$ of the binomial distribution are\n",
    "\\begin{equation}\n",
    "\\mu = np\n",
    "\\end{equation}\n",
    "and\n",
    "\\begin{equation}\n",
    "\\sigma^2 = np(1-p).\n",
    "\\end{equation}\n",
    "\n",
    ":::\n",
    "\n",
    "Note, the Bernoulli distribution is simply Binomial(1,p).\n",
    "\n",
    "##  Continuous Distributions\n",
    "Our considerations regarding probability distributions, expectations, and standard deviations will be extended from discrete distributions to  continuous distributions. One simple example of a continuous distribution is the uniform distribution. Continuous distributions are defined by probability\n",
    " density functions.\n",
    "\n",
    "### Distribution functions: PDFs and CDFs\n",
    "\n",
    "The density for a continuous distribution is a measure of the relative probability of \"getting a value close to $x$.\" \n",
    "Probability density functions $f$ and cumulative distribution function $F$  are related as follows.\n",
    "\\begin{equation}\n",
    "f(x) = \\frac{d}{dx} F(x)\n",
    "\\end{equation}\n",
    "\n",
    "### Expectation (Continuous)\n",
    "\n",
    "::: {#def-expectation}\n",
    "\n",
    "#### Expectation (Continuous)\n",
    "\n",
    "\\begin{equation}\n",
    "  \\text{E}(X) = \\int_{-\\infty}^\\infty x f(x) \\, dx\n",
    "  \\end{equation}\n",
    ":::\n",
    "\n",
    "### Variance and Standard Deviation (Continuous)\n",
    "\n",
    "\n",
    "::: {#def-variance}\n",
    "\n",
    "#### Variance (Continuous)\n",
    "\n",
    "Variance can be calculated with $\\text{E}(X)$ and\n",
    "\\begin{equation}\n",
    "  \\text{E}(X^2) = \\int_{-\\infty}^\\infty x^2 f(x) \\, dx\n",
    "\\end{equation}\n",
    "  as\n",
    "\\begin{equation*}\n",
    "  \\text{Var}(X) = \\text{E}(X^2) - [ E(X)]^2.\n",
    "  \\end{equation*}\n",
    "  \\hfill $\\Box$\n",
    ":::\n",
    "\n",
    "::: {#def-standard-deviation}\n",
    "\n",
    "#### Standard Deviation (Continuous)\n",
    "\n",
    "Standard deviation can be calculated \n",
    "  as\n",
    "  \\begin{equation*}\n",
    "  \\text{sd}(X) = \\sqrt{\\text{Var}(X)}.\n",
    "  \\end{equation*}\n",
    "  \\hfill $\\Box$\n",
    ":::\n",
    "\n",
    "### Uniform Distribution\n",
    "\n",
    "This variable is defined in the interval $[a,b]$. We write it as $X \\sim U[a,b]$. Its\n",
    "density and cumulative distribution functions are, respectively,\n",
    "$$\n",
    "f_X(x) = \\frac{I_{[a,b]}(x)}{b-a}, \t\\quad\\quad F_X(x) = \\frac{1}{b-a}\\int\\limits_{-\\infty}\\limits^x I_{[a,b]}(t) \\mathrm{d}t = \\frac{x-a}{b-a},\n",
    "$$\n",
    "where $I_{[a,b]}(\\cdot)$ is the indicator function of the interval\n",
    "$[a,b]$. \n",
    "Note that, if we set $a=0$ and $b=1$,\n",
    "we obtain $F_X(x) = x$, $x$ $\\in$ $[0,1]$.\n",
    "\n",
    "A typical example is the following: the cdf of a continuous r.v. is uniformly distributed in\n",
    "$[0,1]$. The proof of this statement is as follows: For $u$ $\\in$\n",
    "$[0,1]$, we have\n",
    "\\begin{eqnarray*}\n",
    "\\Pr\\{F_X(X) \\leq u\\} &=& \\Pr\\{F_X^{-1}(F_X(X)) \\leq F_X^{-1}(u)\\} = \\Pr\\{X \\leq F_X^{-1}(u)\\} \\\\\n",
    "\t                  &=& F_X(F_X^{-1}(u)) = u.\t\t\n",
    "\\end{eqnarray*}\n",
    "This means that, when $X$ is continuous, there is a one-to-one relationship (given by the cdf) between $x$ $\\in$ $D_X$ and $u$ $\\in$ $[0,1]$.\n",
    "\n",
    "The \\emph{uniform distribution} has a constant density over a specified interval, say $[a,b]$.\n",
    " The uniform $U(a,b)$ distribution has density\n",
    " \\begin{equation}\n",
    " f(x) = \n",
    " \\left\\{\n",
    "  \\begin{array}{ll}\n",
    "  1/(b-a) & \\textrm{ if } a < x < b,\\\\\n",
    "  0 & \\textrm{ otherwise}\n",
    "  \\end{array}\n",
    "  \\right.\n",
    "  \\end{equation}\n",
    "\n",
    "### Normal Distribution\n",
    "  \n",
    "::: {#def-normal}\n",
    "\n",
    "#### Normal Distribution\n",
    "\n",
    "This variable is defined on the support $D_X = \\mathbb{R}$ and its density\n",
    "function is given by\n",
    "$$\n",
    "f_X(x) = \\frac{1}{\\sqrt{2\\pi\\sigma^2}}\\exp\\left \\{-\\frac{1}{2\\sigma^2}(x-\\mu)^2 \\right \\}.\n",
    "$$\n",
    "The density function is identified by the pair of parameters\n",
    "$(\\mu,\\sigma^2)$, where $\\mu$ $\\in$ $\\mathbb{R}$ is the mean (or location\n",
    "parameter) and $\\sigma^2 > 0$ is the variance (or dispersion parameter)\n",
    "of $X$. \n",
    "\\hfill $\\Box$\n",
    ":::\n",
    "\n",
    "The density function is symmetric around $\\mu$. The normal distribution belongs to the location-scale family\n",
    "distributions. This means that, if $Z \\sim N(0,1)$ (read, $Z$ has a standard normal distribution; i.e., with $\\mu=0$ and $\\sigma^2=1$), and we \n",
    "consider the linear transformation $X = \\mu + \\sigma Z$, then $X \\sim N(\\mu,\\sigma^2)$ (read, $X$ has a normal distribution with mean\n",
    "$\\mu$ and variance $\\sigma^2$). This means that one can obtain the probability of any interval $(-\\infty,x]$, $x$ $\\in$ $R$ for any normal distribution (i.e., for any pair of the parameters $\\mu$ and $\\sigma$) once the quantiles of the standard normal distribution are known. Indeed\n",
    "\\begin{eqnarray*}\n",
    "F_X(x) &=& \\Pr\\left\\{X \\leq x \\right\\} = \\Pr\\left\\{\\frac{X-\\mu}{\\sigma} \\leq \\frac{x-\\mu}{\\sigma} \\right\\} \\\\\n",
    "           &=& \\Pr\\left\\{Z \\leq \\frac{x-\\mu}{\\sigma}\\right\\}  = F_Z\\left(\\frac{x-\\mu}{\\sigma}\\right)\t\\qquad x \\in \\mathbb{R}.\n",
    "\\end{eqnarray*}\n",
    "The quantiles of the standard normal\n",
    "distribution are available in any statistical program. The density and\n",
    "cumulative distribution function of the standard normal r.v.~at point\n",
    "$x$ are usually denoted by the symbols $\\phi(x)$ and $\\Phi(x)$.\n",
    "\n",
    "The standard normal distribution is based on the \n",
    "\\emph{standard normal density function}\n",
    "$$\n",
    " \\varphi(z) = \\frac{1}{\\sqrt{2\\pi}} \\exp \\left(- \\frac{z^2}{2} \\right).\n",
    "$$ {#eq-standardization}\n",
    "\n",
    "An important application of the standardization introduced in @eq-standardization reads as follows.\n",
    "In case the distribution of $X$ is approximately normal, the distribution of X^{*} is approximately standard normal.\n",
    "That is\n",
    "\\begin{equation*}\n",
    "  P(X\\leq b) = P( \\frac{X-\\mu}{\\sigma} \\leq \\frac{b-\\mu}{\\sigma}) = P(X^{*} \\leq \\frac{b-\\mu}{\\sigma})\n",
    "\\end{equation*}\n",
    "The probability $P(X\\leq b)$ can be approximated by $\\Phi(\\frac{b-\\mu}{\\sigma})$,\n",
    "where $\\Phi$ is the standard normal cumulative distribution function. \n",
    "  \n",
    "If $X$ is a normal random variable with mean $\\mu$ and variance $\\sigma^2$,\n",
    "  i.e., $X \\sim \\cal{N} (\\mu, \\sigma^2)$, then\n",
    "  \\begin{equation}\n",
    "  X = \\mu + \\sigma Z \\textrm{ where } Z \\sim \\cal{N}(0,1).\n",
    "  \\end{equation}\n",
    "  \n",
    "  \n",
    "If $Z \\sim \\cal{N}(0,1)$ and $X\\sim \\cal{N}(\\mu, \\sigma^2)$, then \n",
    "  \\begin{equation*}\n",
    "  X = \\mu + \\sigma Z. \n",
    "\\end{equation*}\n",
    "  \n",
    " The probability of getting a value in a particular interval is the area\n",
    " under the corresponding part of the curve.\n",
    " Consider the density function of the normal distribution. It can \n",
    " be plotted using the following commands.\n",
    " The result is shown in @fig-normal-density.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "fig-normal-density",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 672x480 with 1 Axes>"
      ]
     },
     "metadata": {
      "image/png": {
       "height": 449,
       "width": 597
      }
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "#| label: fig-normal-density\n",
    "#| fig-cap: Normal Distribution Density Function\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "from scipy.stats import norm\n",
    "x = np.arange(-4, 4, 0.1)\n",
    "# Calculating the normal distribution's density function values for each point in x\n",
    "y = norm.pdf(x, 0, 1)\n",
    "plt.plot(x, y, linestyle='-', linewidth=2)\n",
    "plt.title('Normal Distribution')\n",
    "plt.xlabel('X')\n",
    "plt.ylabel('Density')\n",
    "plt.grid(True)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c7ee75eb",
   "metadata": {},
   "source": [
    "The \\emph{cumulative distribution function} (CDF) describes the probability\n",
    "of \"hitting\" $x$ or less in a given distribution.\n",
    "We consider the CDF function of the normal distribution. It can be plotted using the following commands.\n",
    "The result is shown in @fig-normal-cdf.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "fig-normal-cdf",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAABJkAAAOCCAYAAADUfAP9AAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjguMiwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy8g+/7EAAAACXBIWXMAAB2HAAAdhwGP5fFlAADGsUlEQVR4nOzdd3wU1frH8e+mhxRKgnRCgnSQrhTpKCoiNkClimK/FxWsXAW7XrF3RQhNRX8XBVEUAanSmyidJIQOAUISSN2d3x+RNXE2jWxJNp/36xUz+8yZM8/msGbz7JkzFsMwDAEAAAAAAACl4OPpBAAAAAAAAFD+UWQCAAAAAABAqVFkAgAAAAAAQKlRZAIAAAAAAECpUWQCAAAAAABAqVFkAgAAAAAAQKlRZAIAAAAAAECpUWQCAAAAAABAqVFkAgAAAAAAQKlRZAIAAAAAAECpUWQCAAAAAABAqVFkAgAAAAAAQKlRZAIAAAAAAECpUWQCAAAAAABAqVFkAgAAAAAAQKlRZAIAAAAAAECpUWQCAAAAAABAqVFkAgAAAAAAQKlRZAIAAGVSQkKCLBaLLBaLevbs6el0ijRp0iR7vrGxsZ5Op1SK87OPjY21t5k0aZJb83OVZcuW2Z/TqFGjPJ0OAADljp+nEwAAwN0aNGigAwcO2B+PHj1an3/+eZHH/fTTT7r22mslST169NCyZctclSJcwGKxOIz7+PgoNDRU4eHhqlKlipo3b662bduqS5cu6tatW4HHecrbb7+t5ORkSfKa4o6rxMbGKiEhQZL08MMPq0qVKh7Np6w7deqU5s2bp6VLl2rr1q06efKkzpw5o+DgYEVERKhVq1bq3LmzBg0apIYNGzrsIyEhQdHR0Q73+fr6KiwsTOHh4apWrZpatmyptm3bqkePHmrfvn2x85w0aZKee+65Ej23ypUr2183AADXocgEAKjwpk+frnHjxql58+aeTgUeYLPZlJKSopSUFB06dEh//PGHvv76a0lSTEyM7rnnHj3yyCMKCAjwcKa53n77bXuRlCJT4WJjY7V8+XJJ0qhRoygyFSAlJUWvvPKK3n//faWlpZn2Z2dnKyUlRfHx8Zo/f76eeuop9e7dW6+88oouv/zyYp/HarUqOTlZycnJSkxM1NatWzVr1ixJUqtWrfTggw9qzJgx8vHhYgsAKK8oMgEAKjyr1aqnnnpK8+bN83QqcJOnn35aVatWtT9OT09XcnKyDh8+rPXr1ys+Pl6SFBcXpyeffFIzZ87UrFmz1KZNGw9lDLjGnj17dOONN2rnzp32WHBwsLp166ZmzZqpevXqysjI0PHjx7VmzRr98ccfkqSlS5fqiiuu0NmzZxUeHl5g/6+//nq+x+fOnVNycrIOHDig9evX6/Dhw5Kk7du367777tOsWbM0c+ZMNWjQoFj5d+jQQUOGDCmyXVBQULH6AwCUDkUmAECF5uvrK6vVqvnz52v16tXq2rWrp1OCG4wZM6bQP2J37typd955R5999plsNpv+/PNP9e3bV7/99psaN27s8JhJkyZ5zcyiBg0ayDAMT6fhdj179qxQzzsxMVFXXnmlTp48KUkKDw/XhAkT9NBDD6lSpUoOjzlw4IAmT56szz77TJmZmbLZbIWeY/z48YXuX79+vd544w377MFVq1apT58+WrNmjS655JIin0OLFi2KPAcAwH2YiwoAqNDuvPNO+/YTTzzhwUxQljRr1kwff/yxFi1aZJ+lcerUKV1//fXKzs72cHZA6WVlZenmm2+2F5hq166tVatW6fHHHy+wwCRJUVFReu+99/T777+rdevWpc7j8ssv15w5czR79mz5+eV+/h0XF6fBgweXum8AgPtRZAIAVGgPPfSQ6tevL0lavXq1Uy+ZS01N1RtvvKHevXurdu3aCgwMVEREhNq1a6cnnnhC+/fvL7KPnj172u92dWEB43Xr1unee+9VkyZNFB4ebrq714X2eWfqfP311+rfv7/q1aunoKAgNWzYUCNGjMh3icwFcXFxGjdunFq1aqXw8HBVrlxZXbp0sc/qKcrhw4f18ccf67bbblOLFi0UHh4uf39/+3N/+OGHtWPHjiL7KQv69Omj6dOn2x/v3btXU6dOddi2uHeXO3PmjN544w316dNHtWrVUmBgoAICAuw/n3vvvVf/93//Z1qk+ELfeRetvxDL+/XPGVqO8jpw4ICeeeYZtW3bVtWrV5ePj0++u8hd7J39jh07pokTJ6p169aqWrWqQkND1bx5cz322GP2y6IKUtI7uxX2827QoIEsFot9PSZJio6OdvjzKk0O8fHxeuqpp9ShQwdFRkYqMDBQtWrVUq9evfT666/r7NmzRfbhaNx++OEH3XTTTapfv74CAwNVvXp1XXPNNZozZ06R/RVXbGysNm3aJCl3RuecOXPUqlWrYh/fuHFjrV27VmFhYU7J54477sh3ad3y5cv1888/O6VvAIAbGQAAVDBRUVGGJEOSsXPnTiM2Ntb+uHnz5kZOTo7D4xYuXGhv16NHj0LPsWDBAqN69er29o6+/P39jeeee67Qfnr06GFvHx8fbzz22GOGxWIx9TVx4kT7MRdiUVFRRlpamnHDDTcUmsO8efPsx3700UdGQEBAge0HDhxoZGdnF5jvp59+6jC/f35ZLBbjySefNKxWa4F9xcfHF/vnXRx5zx8fH1+iY/v06WM/tlGjRg7bTJw40d5m2rRpDtssW7bMiIyMLPLnI8kYN25cgfkX9hUVFVVoXl999ZURFhZmOi7vz7g4P/tp06bl+/e3fPnyQv/Nh4eHG3Pnzi3wZ/zrr7/a244cObLAdsX5eed9jRf1dbE5vPjii4W+ViQZkZGR+V5fjuQdt4yMDGPo0KGF9jlkyJBCX4PFYbPZjJiYGHufI0aMKFV/eeX9t1PSPzWsVqvRuHFj+7FXXXWVw3Z5x744/1YAAO7DmkwAgApv+PDheuONN7R9+3bt2LFDsbGxuuuuuy66v++++0633nqrrFarJKl69eoaOHCgGjRooDNnzmjhwoXasWOHsrOzNXHiRJ05c0ZvvfVWkf2+9tpr+vjjj+Xr66urr75a7du3l7+/v3bv3q3Q0FCHx9x1112aP39+vhySk5P13Xffad++fcrOztagQYO0a9cu/fbbb7r//vvl6+ur6667zt7/2rVr9eOPP0qS5s2bp9dee00TJkxweL5Tp07JMAwFBQWpc+fOatGihapXry5/f3+dOHFCq1at0saNG2UYhl599VUFBgaWi3WMHnzwQS1ZskRS7mymxMRE+wy44jp06JAGDBig1NRUSVLdunV19dVXq0GDBvL399fZs2e1Z88erVmzRkePHjUdf2GWx8svv6wzZ87ki+VVuXLlAnNYvXq1YmNjlZOTo/bt26tXr16qWrWqDh06pJSUlBI9n7wSExN144036syZM2rSpIn69++vatWq6cCBA/ruu+908uRJpaSkaMiQIfrhhx901VVXXfS5imPChAk6e/asPvroI8XFxUkyL/ZeGuPHj9cbb7xhf9ykSRNdd911ioyM1IEDBzRv3jwdP35cSUlJuvnmmzVnzhzdcsstRfY7ZswYzZ49W1WqVNGAAQPUuHFjZWZmaunSpfrtt98kSXPmzNFll12mp59++qLz37Ztm/3nIkn333//RfflTD4+Prrvvvv06KOPSspdnykzM1OBgYEezgwAUGyernIBAOBu/5zJZBi5M48uxOrWrWukp6ebjivOTKajR48aVatWtbe75ZZbjLNnz+ZrY7PZjP/+97/5Pu1fsGCBw/7yzmSSZDRo0MDYvn17oc9PDmY+pKam5muTlZVlXH/99fY2AwYMMMLDw4169eoZW7duNfU5c+ZMe9sqVao4/PkYhmHMnTvXmDVrlnHu3LkC81uyZIlRrVo1Q5Lh6+tb4KyisjSTKSkpKd/xM2fONLUpaibTM888Y98/ZsyYAmej2Gw247fffjO+//57h/vz/vstjrx5STKCgoKMb775ptBjSjqT6cLstYkTJ5pmpyUnJxsDBgzI9/pKSUkx9efMmUwX/HMmYFGKk8NPP/2U7+f5yiuvmJ5zamqqMXjw4HyvmUOHDjns75+v14EDBxpnzpwxtXvjjTeK9RosjjfffNPeV2hoaKEzCkuqNDOZDMMwNm3alO/4lStXmtowkwkAyi7WZAIAQFL//v3VvXt3SbkzTt55552L6uedd96xzzJp166dvvrqK9PtvS0Wix577DE98sgj9tjEiROL7DsgIEA//PCDWrZsWex8OnbsqFmzZplmOvn7++vDDz+Uj0/uW4Hvv/9e58+f1/z58x0u5jts2DD17t1bkpScnKylS5c6PN9NN92koUOHFrpwcO/evTVlyhRJktVq1eeff17s5+MpERERqlevnv1x3nWRimvLli327VdeecW+yPE/WSwWde7cWddff33JEy2G9957T7feeqtT+zQMQ6NGjdKkSZPs/6YuqFy5sr755hv7XfkOHTqkadOmOfX87pR35t2//vUvPfnkk6bnHBoaqtmzZ6tjx46Scl8zb775ZpF9t23bVl9//bWqVKli2vfoo4/qiiuusPd3YWbdxci7Flvr1q1N+XvSZZddlm+trKJea9OnT3e41lbeL0c/TwCAa5Sd3ygAAHjYf//7X/v2q6++ai8WlUTeRaJfeumlAgsJUu4fqxeKMZs2bdIff/xRaN+DBg1S8+bNS5TPM888U2AO9erV02WXXWZ/PHDgQLVp06bAvgYMGGDfzlswuRg33HCDQkJCJEkrVqwoVV/uUq1aNfv2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L1111VVO6RsA4D4UmQAAKEBAQEC+P4ynTp1a5DFjx461z+LZsGGDhg4davojzDAMvfXWW3rjjTfsseeee85JWXtO9+7d7dtPPvmk9u/fb2qzZ88e9enTRydOnChTf3D/086dO3X//ffr6quvVkpKiqTcmSjff/99vtkxJdG7d2+99dZbOnbsWIFtVq1apVmzZtkf5/2ZXtCkSRP7dnFm87iDxWLR1KlT9eKLL5ouE01JSdHgwYO1a9cuSVKdOnV05513Ouzn5ptvtm/ffffdDi+bmzp1arHXSXPFzypvYentt9/W66+/blpD6ty5cxo+fLjWrVsnSapSpYp9nbeyIiAgQN9++639suDDhw+ra9euev311wtd7+rAgQP697//rVatWmnr1q2lzmPDhg267bbbNHToUHtRvmHDhpozZ06p+wYAuJ+fpxMAAKAsGzp0qCZPnqxt27YV67KQmjVr6vPPP9ett94qq9Wqr7/+WsuWLdPAgQPVoEEDnTlzRgsXLtSff/5pP+bhhx9W//79Xfk03GLEiBF66aWXdOTIER09elTNmzfXjTfeqKZNm8owDG3ZskU///yzsrOzNWLECC1fvlwHDhzwSK6fffZZvkWcMzIydPbsWR06dEjr16+3rx10QatWrTRr1qx8a/KUVFxcnB599FGNHz9ebdu2Vdu2bVWnTh0FBAToxIkTWrduXb51rYYMGaI2bdqY+unfv7+++OILSbmFmOXLl+vSSy+1F7/Cw8MdzhRypZEjR2revHl65plnNHv2bPXv31/VqlXTgQMH9O233+rkyZOSchc9//zzzxUeHu6wn8cff1wzZ87U+fPntXLlSjVp0kS33nqratasqaSkJC1atEh//PGHatasqeuvv15TpkwpNK/+/fvr5ZdflpQ7s3Dnzp1q2bJlvkXoH3rooRI91379+mncuHH2IvHjjz+uadOm6dprr1VERIQSExM1b948ezHR19dXU6ZMUZ06dUp0HneoX7++Vq9erYEDB2rXrl1KSUnR448/rkmTJqlbt25q3ry5IiMjlZGRoWPHjmnt2rXavn27/XiLxVLkHQsnT56c73F6erqSk5OVkJCgdevW6fDhw/n2d+/eXTNmzLDPagMAlC8UmQAAKITFYtGrr76qa6+9ttjH3HjjjZo3b55GjRqlpKQknThxQp999pmpnb+/v55++ulCL7kpT0JDQzVv3jz1799fJ06cUFZWlr7++mtTu9tvv12ffPKJmjZt6oEsc10oPBSlYcOGuueee/Twww+XegHiC8fbbDZt2rSp0EsKR4wYoU8//dThvsGDB+uTTz7RihUrlJqamm9Rcin3lu/uLjJFRUXp22+/1a233qpdu3bZZy3lFRoaqmnTpqlfv34F9hMTE6PZs2frtttuU2Zmpo4cOaJ33303X5vo6GjNnTtX3333XZF5denSRXfccYe++OILZWVlKTY21tSmpEUmKbdwUrlyZb344ovKysrSzp07tXPnTlO7iIgITZ06VTfccEOJz+EujRs31rp16/TSSy/pww8/VFpams6fP6+ff/4535pxeVksFvXr10+vvPJKgQXDC/JeAleYyy67TA899JDuvvvuMj3LEQBQOIpMAAAU4ZprrlHv3r21dOnSYh/Tv39/7d+/X5999pkWLFignTt36vTp0woNDVVUVJSuuuoq3XPPPbr00ktdmLn7dejQQdu3b9fbb7+tBQsW2C+Zq1Gjhi6//HKNGDFC1113nYezzM9isSg0NFTh4eGqWrWqmjVrpnbt2unKK69U165dnfYH79atW7VkyRItW7ZMmzZt0v79+5WUlKScnByFhYUpJiZGXbp00YgRI9ShQ4cC+/Hz89Mvv/yijz/+WN9++63+/PNPJScnKzs72yl5XqwePXpo27Zt+vDDDzV//nwlJiYqOztb9evXV//+/fXwww8X6658N954o7Zv367Jkydr8eLFOnLkiIKCghQTE6NBgwbp/vvvV+XKlYtVZJJyF7W++uqr9eWXX+r333/XqVOnlJWVVcpnmzszaujQofr000+1aNEiHThwQKmpqapWrZqaNm2q/v3765577sm3LlRZFR4ertdee02PP/64vvvuOy1dulRbt27VyZMndebMGVWqVEkRERFq1aqVunbtqiFDhigqKqrE5/Hx8bG/1iIiItSyZUu1a9dOPXv2tK8PBQAo3yzGPy8iBwAAAAAAAEqIhb8BAAAAAABQahSZAAAAAAAAUGoUmQAAAAAAAFBqFJkAAAAAAABQahSZAAAAAAAAUGoUmQAAAAAAAFBqFJkAAAAAAABQahSZAAAAAAAAUGoUmQAAAAAAAFBqFJkAAAAAAABQahSZAAAAAAAAUGoUmQAAAAAAAFBqfp5OAM6Tk5OjgwcPSpLC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",
      "text/plain": [
       "<Figure size 672x480 with 1 Axes>"
      ]
     },
     "metadata": {
      "image/png": {
       "height": 449,
       "width": 588
      }
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "#| label: fig-normal-cdf\n",
    "#| fig-cap: Normal Distribution Cumulative Distribution Function\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "from scipy.stats import norm\n",
    "\n",
    "# Generating a sequence of numbers from -4 to 4 with 0.1 intervals\n",
    "x = np.arange(-4, 4, 0.1)\n",
    "\n",
    "# Calculating the cumulative distribution function value of the normal distribution for each point in x\n",
    "y = norm.cdf(x, 0, 1)  # mean=0, stddev=1\n",
    "\n",
    "# Plotting the results. The equivalent of 'type=\"l\"' in R (line plot) becomes the default plot type in matplotlib.\n",
    "plt.plot(x, y, linestyle='-', linewidth=2)\n",
    "plt.title('Normal Distribution CDF')\n",
    "plt.xlabel('X')\n",
    "plt.ylabel('Cumulative Probability')\n",
    "plt.grid(True)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f8426aa6",
   "metadata": {},
   "source": [
    "### The Mean, the Median, and the Mode\n",
    "\n",
    "### The Exponential Distribution\n",
    "\n",
    "The exponential distribution is a continuous probability distribution that describes the time between events in a Poisson process, where events occur continuously and independently at a constant average rate. It is characterized by a single parameter, the rate parameter $\\lambda$, which represents the average number of events per unit time.\n",
    "\n",
    "### Population and Estimated Parameters\n",
    "\n",
    "### Calculating the Mean, Variance, and Standard Deviation\n",
    "\n",
    "### What is a Mathematical Model?\n",
    "\n",
    "### Sampling from a Distribution\n",
    "\n",
    "### Hypothesis Testing and the Null Hypothesis\n",
    "\n",
    "### Alternative Hypotheses\n",
    "\n",
    "### p-values: What They Are and How to Interpret Them\n",
    "\n",
    "### How to Calculate p-values\n",
    "\n",
    "### p-hacking: What It Is and How to Avoid It\n",
    "\n",
    "### Covariance\n",
    "\n",
    "### Pearson's Correlation\n",
    "\n",
    "### Boxplots\n",
    "\n",
    "### R-squared\n",
    "\n",
    "### The Main Ideas of Fitting a Line to Data\n",
    "\n",
    "### Linear Regression\n",
    "\n",
    "### Multiple Regression\n",
    "\n",
    "\n",
    "## Supervised Learning\n",
    "\n",
    "Objectives of supervised learning: On the basis of the training data we would like to:\n",
    "\n",
    "* Accurately predict unseen test cases.\n",
    "* Understand which inputs affect the outcome, and how.\n",
    "* Assess the quality of our predictions and inferences.\n",
    "\n",
    "Note: Supervised means $Y$ is known.\n",
    "\n",
    "::: {#exr-starting-point}\n",
    "\n",
    "* Do children learn supervised?\n",
    "* When do you learn supervised?\n",
    "* Can learning be unsupervised?\n",
    ":::\n",
    "\n",
    "##### Unsupervised Learning\n",
    "\n",
    "No outcome variable, just a set of predictors (features) measured on a set of samples.\n",
    "The objective is more fuzzy---find groups of samples that behave similarly, \n",
    "find features that behave similarly, find linear combinations of features with the most variation.\n",
    "It is difficult to know how well your are doing.\n",
    "Unsupervised learning different from supervised learning, \n",
    "but can be useful as a pre-processing step for supervised learning.\n",
    "Clustering and principle component analysis are important techniques.\n",
    "\n",
    "Unsupervised: $Y$ is unknown, there is no $Y$, no trainer, no teacher, but:\n",
    "distances between the inputs values (features).\n",
    "A distance (or similarity) measure is necessary.\n",
    "\n",
    "##### Statistical Learning\n",
    "\n",
    "We consider supervised learning first.\n",
    "\n",
    "![Sales as a function of TV, radio and newspaper. Taken from @Jame14a ](./figures_static/0201.png){width=100% #fig-0201}\n",
    "\n",
    "\n",
    "Sales figures from a marketing campaign, see @fig-0201.\n",
    "Trend shown using regression. First seems to be stronger than the third.\n",
    "\n",
    "Can we predict $Y$ = Sales using these three?\n",
    "Perhaps we can do better using a model\n",
    "$$\n",
    "Y = Sales \\approx  f(X_1 = TV,  X_2 = Radio, X_3= Newspaper)\n",
    "$$\n",
    "modeling the joint relationsship.\n",
    "\n",
    "Here Sales is a response or target that we wish to predict.\n",
    "We generically refer to the response as $Y$.\n",
    "TV is a feature, or input, or predictor; we name it $X_1$.\n",
    "Likewise name Radio as $X_2$, and so on.\n",
    "We can refer to the input vector collectively as\n",
    "$$\n",
    "X =\n",
    "\\begin{pmatrix}\n",
    "X_1\\\\\n",
    "X_2\\\\\n",
    "X_3\n",
    "\\end{pmatrix}\n",
    "$$\n",
    "\n",
    "Now we write our model as\n",
    "$$\n",
    "Y = f(X) + \\epsilon\n",
    "$$\n",
    "where $\\epsilon$ captures measurement errors and other discrepancies.\n",
    "\n",
    "What is $f$ good for? With a good $f$ we can make predictions of $Y$ at new points $X = x$.\n",
    "We can understand which components of\n",
    "$X = (X_1, X_2, \\ldots X_p)$ are important in explaining $Y$,\n",
    "and which are irrelevant.\n",
    "\n",
    "For example, Seniority and Years of Education have a big impact on Income, but Marital Status typically does not.\n",
    "Depending on the complexity of $f$,\n",
    "we may be able to understand how each component $X_j$ of $X$ affects $Y$.\n",
    "\n",
    "\n",
    "### Statistical Learning and Regression\n",
    "\n",
    "#### Regression Function\n",
    "\n",
    "![Scatter plot of 2000 points (population). What is a good function $f$? There are many function values at $X=4$. A function can return only one value. We can take the mean from these values as a return value. Taken from @Jame14a ](./figures_static/0202a.png){width=100% #fig-0202a}\n",
    "\n",
    "Consider @fig-0202a. Is there an ideal $f(X)$? In particular, what is a good value for $f(X)$ at any selected value of $X$, say $X = 4$? There can be many $Y$ values at $X=4$.\n",
    "A good value is\n",
    "$$\n",
    "f(4) = E(Y |X = 4).\n",
    "$$\n",
    "\n",
    "$E(Y |X = 4)$  means **expected value** (average) of $Y$ given $X = 4$.\n",
    "\n",
    "\n",
    "The ideal $f(x) = E(Y |X = x)$ is called the **regression function**.\n",
    "Read: The regression function gives the conditional expectation of $Y$ given $X$.\n",
    "\n",
    "The regression function $f(x)$ is also defined for the vector $X$;\n",
    "e.g.,\n",
    "$f(x) = f(x_1, x_2, x_3) = E(Y | X_1 =x_1, X_2 =x_2, X_3 =x_3).$\n",
    "\n",
    "::: {def-optimal-predictor}\n",
    "\n",
    "### Optimal Predictor\n",
    "\n",
    "The regression function is the **ideal** or **optimal predictor** of $Y$ with regard to mean-squared prediction error: It means that\n",
    "$f(x) = E(Y | X = x)$ is the function that minimizes\n",
    "$$\n",
    "E[(Y - g(X))^2|X = x]\n",
    "$$\n",
    "over all functions $g$ at all points $X = x$.\n",
    "\n",
    ":::\n",
    "\n",
    "#### Residuals, Reducible and Irreducible Error\n",
    "\n",
    "At each point $X$ we make mistakes:\n",
    "$$\n",
    "\\epsilon = Y-f(x)\n",
    "$$\n",
    "is the **residual**.\n",
    "Even if we knew $f(x)$, we would still make errors in prediction,\n",
    "since at each $X=x$ there is typically a distribution of possible $Y$ values as\n",
    "is illustrated in @fig-0202a.\n",
    "\n",
    "For any estimate $\\hat{f}(x)$ of $f(x)$, we have\n",
    "$$\n",
    "E\\left[ ( Y - \\hat{f}(X))^2 | X = x\\right] = \\left[ f(x) - \\hat{f}(x) \\right]^2 + \\text{var}(\\epsilon),\n",
    "$$\n",
    "and\n",
    "$\\left[ f(x) - \\hat{f}(x) \\right]^2$ is the **reducible** error, because it depends on the model (changing the model $f$ might reduce this error), and\n",
    "$\\text{var}(\\epsilon)$ is the **irreducible** error.\n",
    "\n",
    "#### Local Regression (Smoothing)\n",
    "\n",
    " Typically we have few if any data points with $X = 4$ exactly. So we cannot compute $E(Y |X = x)$!\n",
    " Idea: Relax the definition and let\n",
    " $$\n",
    " \\hat{f}(x)=  Ave(Y|X \\in  \\cal{N}(x)),\n",
    " $$\n",
    "where $\\cal{N} (x)$ is some neighborhood of $x$, see @fig-0203a.\n",
    "\n",
    "![Relaxing the definition. There is no $Y$ value at $X=4$. Taken from @Jame14a ](./figures_static/0203a.png){width=70% #fig-0203a}\n",
    "\n",
    "Nearest neighbor averaging can be pretty good for small $p$, i.e.,  $p \\leq 4$ and large-ish $N$.\n",
    "We will discuss smoother versions, such as kernel and spline smoothing later in the course.\n",
    "\n",
    "### Curse of Dimensionality and Parametric Models\n",
    "\n",
    "![A 10\\% neighborhood in high dimensions need no longer be local. Left: Values of two variables $x_1$ and $x_2$, uniformly distributed. Form two 10\\% neighborhoods: (a) the first is just involving $x_1$ ignoring $x_2$. (b) is the neighborhood in two dimension. Notice that the radius of the circle is much larger than the lenght of the interval in one dimension. Right: radius plotted against fraction of the volume. In 10 dim, you have to break out the interval $[-1;+1]$ to get 10\\% of the data. Taken from @Jame14a ](./figures_static/0204a.png){width=100% #fig-0204a}\n",
    "\n",
    "Local, e.g., nearest neighbor, methods can be lousy when $p$ is large.\n",
    "Reason: **the curse of dimensionality**, i.e., nearest neighbors tend to be far away in high dimensions.\n",
    "We need to get a reasonable fraction of the $N$ values of $y_i$ to average to bring the variance down---e.g., 10\\%.\n",
    "A 10\\% neighborhood in high dimensions need no longer be local,\n",
    "so we lose the spirit of estimating $E(Y |X = x)$ by local averaging, \n",
    "see @fig-0204a.\n",
    "If the curse of dimensionality does not exist, nearest neighbor models would be\n",
    "perfect prediction models.\n",
    "\n",
    "We will use structured (parametric) models to deal with the curse of dimensionality.\n",
    "The linear model is an important example of a parametric model:\n",
    "$$\n",
    "f_L(X) = \\beta_0 + \\beta_1 X_1 + \\ldots + \\beta_p X_p.\n",
    "$$\n",
    "A linear model is specified in terms of $p + 1$ parameters\n",
    "$ \\beta_1, \\beta_2, \\ldots, \\beta_p$. We estimate the parameters by fitting the model to \\emph{training data}. Although it is almost never correct,\n",
    "a linear model often serves as a good and interpretable approximation to the\n",
    "unknown true function $f(X)$.\n",
    "\n",
    "\n",
    "The linear model is avoiding the curse of dimensionality, because it is not relying on any local properties.\n",
    "Linear models belong to the class of \\emph{model-based} approaches: they replace\n",
    "the problem of estimating $f$ with estimating a fixed set of coefficients $\\beta_i$, with $i=1,2, \\ldots, p$.\n",
    "\n",
    "![A linear model $\\hat{f}_L$ gives a reasonable fit. Taken from @Jame14a ](./figures_static/0301a.png){width=70% #fig-0301a}\n",
    "\n",
    "![A quadratic model $\\hat{f}_Q$ fits slightly better. Taken from @Jame14a ](./figures_static/0302a.png){width=70% #fig-0302a}\n",
    "\n",
    "\n",
    "A linear model\n",
    "$$\n",
    "\\hat{f}_L(X) = \\hat{\\beta}_0 + \\hat{\\beta}_1 X\n",
    "$$\n",
    "gives a reasonable fit, see @fig-0301a.\n",
    "A quadratic  model\n",
    "$$\n",
    "\\hat{f}_Q(X) = \\hat{\\beta}_0 + \\hat{\\beta}_1 X + \\hat{\\beta}_2 X^2\n",
    "$$\n",
    "gives a slightly improved fit, see @fig-0302a.\n",
    "\n",
    "@fig-0203 shows a simulated example.\n",
    "Red points are simulated values for income from the model\n",
    "$$\n",
    "income = f(education, seniority) + \\epsilon\n",
    "$$\n",
    "$f$ is the blue surface.\n",
    "\n",
    "![The true model. Red points are simulated values for income from the model, $f$ is the blue surface. Taken from @Jame14a ](./figures_static/0203.png){width=70% #fig-0203}\n",
    "\n",
    "![Linear regression fit to the simulated data (red points). Taken from @Jame14a ](./figures_static/0204.png){width=70% #fig-0204}\n",
    "\n",
    "The linear regression model \n",
    "$$\n",
    "\\hat{f}(education, seniority) = \\hat{\\beta}_0 + \\hat{\\beta}_1 \\times education +\n",
    " \\hat{\\beta}_2 \\times seniority\n",
    "$$\n",
    "captures the important information. But it does not capture everything.\n",
    "More flexible regression model\n",
    "$$\n",
    "\\hat{f}_S (education, seniority)\n",
    "$$\n",
    "fit to the simulated data.\n",
    "Here we use a technique called a **thin-plate spline** to fit a flexible surface.\n",
    "Even more flexible spline regression model\n",
    "$$\n",
    "\\hat{f}_S (education, seniority)\n",
    "$$\n",
    "fit to the simulated data. Here the\n",
    "fitted model makes no errors on the training data! Also known as **overfitting**.\n",
    "\n",
    "![Thin-plate spline models $\\hat{f}_S (education, seniority)$ fitted to the model from @fig-0203. Taken from @Jame14a ](./figures_static/0205.png){width=70% #fig-0205}\n",
    "\n",
    "![Thin-plate spline models $\\hat{f}_S (education, seniority)$ fitted to the model from @fig-0203. The model makes no errors on the training data (overfitting). Taken from @Jame14a ](./figures_static/0206.png){width=70% #fig-0206}\n",
    "\n",
    "#### Trade-offs\n",
    "\n",
    "* Prediction accuracy versus interpretability: Linear models are easy to interpret; thin-plate splines are not.\n",
    "* Good fit versus over-fit or under-fit: How do we know when the fit is just right?\n",
    "* Parsimony (Occam's razor) versus black-box: We often prefer a simpler model involving fewer variables over a black-box predictor involving them all.\n",
    "\n",
    "The trad-offs are visualized in @fig-0207.\n",
    "\n",
    "![Interpretability versus flexibility. Flexibility corresponds with the number of model parameters. Taken from @Jame14a ](./figures_static/0207.png){width=70% #fig-0207}\n",
    "\n",
    "### Assessing Model Accuracy and Bias-Variance Trade-off\n",
    "\n",
    "![Black curve is truth. Red curve on right is $MSETe$, grey curve is $MSETr$. Orange, blue and green curves/squares correspond to fits of different flexibility. The dotted line represents the irreducible error, i.e., $var(\\epsilon)$. Taken from @Jame14a ](./figures_static/0303a.png){width=100% #fig-0303a}\n",
    "\n",
    "![Here, the truth is smoother. Black curve is truth. Red curve on right is $MSETe$, grey curve is $MSETr$. Orange, blue and green curves/squares correspond to fits of different flexibility. The dotted line represents the irreducible error, i.e., $var(\\epsilon)$. Taken from @Jame14a ](./figures_static/0210.png){width=100% #fig-0210}\n",
    "\n",
    "![Here the truth is wiggly and the noise is low, so the more flexible fits do the best. Black curve is truth. Red curve on right is $MSETe$, grey curve is $MSETr$. Orange, blue and green curves/squares correspond to fits of different flexibility. The dotted line represents the irreducible error, i.e., $var(\\epsilon)$. Taken from @Jame14a ](./figures_static/0211.png){width=100% #fig-0211}\n",
    "\n",
    "\n",
    "Suppose we fit a model $f(x)$ to some training data $Tr = \\{x_i, y_i \\}^N_1$, and we wish to see how well it performs.\n",
    "We could compute the average squared prediction error\n",
    "over $Tr$:\n",
    "$$\n",
    "MSE_{Tr} = Ave_{i \\in Tr}[y_i - \\hat{f}(x_i)]^2.\n",
    "$$\n",
    "This may be biased toward more overfit models.\n",
    "Instead we should, if possible, compute it using fresh **test data** $Te== \\{x_i, y_i \\}^N_1$:\n",
    "$$\n",
    "MSE_{Te} = Ave_{i \\in Te}[y_i - \\hat{f}(x_i)]^2.\n",
    "$$\n",
    "The red curve, which illustrated the test error, can be estimated by holding out some data to get the test-data set.\n",
    "\n",
    "#### Bias-Variance Trade-off\n",
    "\n",
    "Suppose we have fit a model $f(x)$ to some training data $Tr$, and let $(x_0, y_0)$ be a test observation drawn from the population.\n",
    "If the true model is\n",
    "$$\n",
    "Y = f(X) + \\epsilon  \\qquad \\text{ with } f(x) = E(Y|X=x),\n",
    "$$\n",
    "then\n",
    "$$\n",
    "E \\left( y_0 - \\hat{f}(x_0) \\right)^2 = \\text{var} (\\hat{f}(x_0)) + [Bias(\\hat{f}(x_0))]^2 + \\text{var}(\\epsilon).\n",
    "$$ {#eq-biasvariance}\n",
    "\n",
    "\n",
    "Here, $\\text{var}(\\epsilon)$ is the irreducible error.\n",
    "The reducible error consists of two components:\n",
    "\n",
    "* $\\text{var} (\\hat{f}(x_0))$ is the variance that comes from different training sets. Different training sets result in different functions $\\hat{f}$.\n",
    "* $Bias(\\hat{f}(x_0)) = E[\\hat{f}(x_0)] - f(x_0)$.\n",
    "\n",
    "The expectation averages over the variability of $y_0$ as well as the variability in $Tr$.\n",
    "Note that \n",
    "$$\n",
    "Bias(\\hat{f}(x_0)) = E[\\hat{f}(x_0)] - f(x_0).\n",
    "$$\n",
    "Typically as the flexibility of $\\hat{f}$ increases,\n",
    "its variance increases (because the fits differ from training set to trainig set), and its bias decreases.\n",
    "So choosing the flexibility based on average test error amounts to a bias-variance trade-off, see @fig-0212.\n",
    "\n",
    "![Bias-variance trade-off for the three examples. Taken from @Jame14a ](./figures_static/0212.png){width=100% #fig-0212}\n",
    "\n",
    "If we add the two components (reducible and irreducible error), we get the MSE in @fig-0212 as can be seen in @eq-biasvariance.\n",
    "\n",
    "### Classification Problems and K-Nearest Neighbors\n",
    "\n",
    "\n",
    "In classification we have a qualitative response variable.\n",
    "\n",
    "![Classification. Taken from @Jame14a ](./figures_static/0218a.png){width=100% #fig-0218a}\n",
    "\n",
    "Here the response variable $Y$ is qualitative, e.g., email is one of $\\cal{C} = (spam, ham)$, where ham is good email,\n",
    "digit class is one of $\\cal{C} = \\{ 0, 1, \\ldots, 9 \\}$.\n",
    "Our goals are to:\n",
    "\n",
    "* Build a classifier $C(X)$ that assigns a class label from $\\cal{C}$ to a future unlabeled observation $X$.\n",
    "* Assess the uncertainty in each classification\n",
    "* Understand the roles of the different predictors among $X = (X_1,X_2, \\ldots, X_p)$.\n",
    "\n",
    "Simulation example depicted in@fig-0218a.\n",
    "$Y$ takes two values, zero and one, and $X$ has only one value.\n",
    "Big sample: each single vertical bar indicates an occurrance of a zero (orange) or one (blue) as a function of the $X$s.\n",
    "Black curve generated the data: it is the probability of generating a one. For high values of $X$, the probability of ones is increasing.\n",
    "What is an ideal classifier $C(X)$?\n",
    "\n",
    "Suppose the $K$ elements in $\\cal{C}$ are numbered $1,2,\\ldots, K$. Let\n",
    "$$\n",
    "p_k(x) = Pr(Y = k|X = x), k = 1,2,\\ldots,K.\n",
    "$$\n",
    "\n",
    "These are the **conditional class probabilities** at $x$; e.g. see little barplot at $x = 5$.\n",
    "Then the  **Bayes optimal classifier** at $x$ is \n",
    "$$\n",
    "C(x) = j \\qquad \\text{ if }  p_j(x) = \\max \\{p_1(x),p_2(x),\\ldots, p_K(x)\\}.\n",
    "$$\n",
    "At $x=5$ there is an 80\\% probability of one, and an 20\\% probability of a zero.\n",
    "So, we classify this point to the class with the highest probability, the majority\n",
    "class.\n",
    "\n",
    "Nearest-neighbor averaging can be used as before. This is illustrated in Fig.~\\ref{fig:0219a}.\n",
    "Here, we consider 100 points only.\n",
    "Nearest-neighbor averaging also breaks down as dimension grows. \n",
    "However, the impact on $\\hat{C}(x)$ is less than on $\\hat{p}_k (x)$, \n",
    "$k = 1, \\ldots, K$.\n",
    "\n",
    "![Classification. Taken from @Jame14a ](./figures_static/0219a.png){width=100% #fig-0219a}\n",
    "\n",
    "\n",
    "#### Classification: Some Details\n",
    "\n",
    "Average number of errors made to measure the performance. Typically we measure the performance of $\\hat{C}(x)$ using the **misclassification error rate**:\n",
    "$$\n",
    "Err_{Te} = Ave_{i\\in Te} I[y_i \\neq \\hat{C} (x_i) ].\n",
    "$$\n",
    "The Bayes classifier (using the true $p_k(x)$) has smallest error (in the population).\n",
    "\n",
    "\n",
    "### k-Nearest Neighbor Classification\n",
    "\n",
    "Consider k-nearest neighbors in two dimensions. Orange and blue dots label the true class memberships of the underlying  points in the 2-dim plane.\n",
    "Dotted line is the decision boundary, that is the contour with equal probability for both classes.\n",
    "\n",
    "Nearest-neighbor averaging in 2-dim. At any given point we want to classify, we spread out a little neighborhood,\n",
    "say $K=10$ points from the neighborhood and calulated the percentage of blue and orange. We assign the color with the highest probability to this point.\n",
    "If this is done for every point in the plane, we obtain the solid black curve as the esitmated decsion boundary.\n",
    "\n",
    "We can use $K=1$. This is the **nearest-neighbor classifier**.\n",
    "The decision boundary is piecewise linear. Islands occur. Approximation is rather noisy.\n",
    "\n",
    "$K=100$ leads to a smooth decision boundary. But gets uninteresting.\n",
    "\n",
    "![K-nearest neighbors in two dimensions. Taken from @Jame14a ](./figures_static/0213.png){width=70% #fig-0213}\n",
    "\n",
    "![K-nearest neighbors in two dimensions. Taken from @Jame14a ](./figures_static/0215.png){width=70% #fig-0215}\n",
    "\n",
    "![K-nearest neighbors in two dimensions. Taken from @Jame14a ](./figures_static/0216.png){width=70% #fig-0216}\n",
    "\n",
    "$K$ large means higher bias, so $1/K$ is chosen, because we go from low to high complexity on the $x$-error, see @fig-0217.\n",
    "Horizontal dotted line is the base error.\n",
    "\n",
    "![K-nearest neighbors classification error. Taken from @Jame14a ](./figures_static/0217.png){width=70% #fig-0217}\n",
    "\n",
    "\n",
    "::: {def-minkowski-distance}\n",
    "\n",
    "### Minkowski Distance\n",
    "\n",
    "The Minkowski distance of order $p$ (where $p$ is an integer) between two points\n",
    "$X=(x_1,x_2,\\ldots,x_n)\\text{ and }Y=(y_1,y_2,\\ldots,y_n) \\in \\mathbb{R}^n$\n",
    "is defined as:\n",
    "$$\n",
    "D \\left( X,Y \\right) = \\left( \\sum_{i=1}^n |x_i-y_i|^p \\right)^\\frac{1}{p}.\n",
    "$$\n",
    ":::\n",
    "\n",
    "### Unsuperivsed Learning: Classification\n",
    "\n",
    "#### k-Means Algorithm\n",
    "\n",
    "The $k$-means algorithm is an unsupervised learning algorithm that has a loose relationship to the $k$-nearest neighbor classifier.\n",
    "The $k$-means algorithm works as follows:\n",
    "\n",
    "* Step 1: Randomly choose $k$ centers. Assign points to cluster.\n",
    "* Step 2: Determine the distances of each data point to the centroids and re-assign each point to the closest cluster centroid based upon minimum distance\n",
    "* Step 3: Calculate cluster centroids again\n",
    "* Step 4: Repeat steps 2 and 3 until we reach global optima where no improvements are possible and no switching of data points from one cluster to other.\n",
    "\n",
    "The basic principle of the $k$-means algorithm is illustrated in @fig-kmeans1, @fig-kmeans2, @fig-kmeans3, and @fig-kmeans4.\n",
    "\n",
    "![k-means algorithm. Step 1. Randomly choose $k$ centers. Assign points to cluster. $k$ initial \\lq means\\rq (in this case $k=3$) are randomly generated within the data domain (shown in color). Attribution: I, Weston.pace, CC BY-SA 3.0 <http://creativecommons.org/licenses/by-sa/3.0/>, via Wikimedia Commons](./figures_static/kmeans1.png){width=70% #fig-kmeans1}\n",
    "\n",
    "![k-means algorithm. Step 2. $k$ clusters are created by associating every observation with the nearest mean. The partitions here represent the Voronoi diagram generated by the means. Attribution: I, Weston.pace, CC BY-SA 3.0 <http://creativecommons.org/licenses/by-sa/3.0/>, via Wikimedia Commons](./figures_static/kmeans2.png){width=70% #fig-kmeans2}\n",
    "\n",
    "![k-means algorithm. Step 3. The centroid of each of the $k$ clusters becomes the new mean. Attribution: I, Weston.pace, CC BY-SA 3.0 <http://creativecommons.org/licenses/by-sa/3.0/>, via Wikimedia Commons](./figures_static/kmeans3.png){width=70% #fig-kmeans3}\n",
    "\n",
    "![k-means algorithm. Step 4. Steps 2 and 3 are repeated until convergence has been reached. Attribution: I, Weston.pace, CC BY-SA 3.0 <http://creativecommons.org/licenses/by-sa/3.0/>, via Wikimedia Commons](./figures_static/kmeans4.png){width=70% #fig-kmeans4}"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3",
   "path": "/Users/bartz/miniforge3/envs/spotCondaEnv/share/jupyter/kernels/python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
