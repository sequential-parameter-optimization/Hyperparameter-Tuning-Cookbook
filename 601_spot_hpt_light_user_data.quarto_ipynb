{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "d0d07b9a",
   "metadata": {},
   "source": [
    "---\n",
    "execute:\n",
    "  cache: false\n",
    "  eval: true\n",
    "  echo: true\n",
    "  warning: false\n",
    "jupyter: python3\n",
    "---\n",
    "\n",
    "\n",
    "# Hyperparameter Tuning with PyTorch Lightning and User Data Sets  {#sec-light-user-data-601}\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "user_data_imports",
   "metadata": {},
   "outputs": [],
   "source": [
    "#| echo: false\n",
    "#| label: 601_user_data_imports\n",
    "import numpy as np\n",
    "import os\n",
    "from math import inf\n",
    "import numpy as np\n",
    "import warnings\n",
    "if not os.path.exists('./figures'):\n",
    "    os.makedirs('./figures')\n",
    "warnings.filterwarnings(\"ignore\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f002938e",
   "metadata": {},
   "source": [
    "In this section, we will show how user specfied data can be used for the `PyTorch` Lightning hyperparameter tuning workflow with `spotpython`.\n",
    "\n",
    "## Loading a User Specified Data Set\n",
    "\n",
    "Using a user-specified data set is straightforward.\n",
    "\n",
    "The user simply needs to provide a data set and loads is as a  `spotpython`  `CVSDataset()` class by specifying the path, filename, and target column.\n",
    "\n",
    "Consider the following example, where the user has a data set stored in the `userData` directory. The data set is stored in a file named `data.csv`. The target column is named `target`. To show the data, it is loaded as a `pandas` data frame and the first 5 rows are displayed. This step is not necessary for the hyperparameter tuning process, but it is useful for understanding the data.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "user_data_load",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "        age       sex       bmi        bp        s1        s2        s3  \\\n",
      "0  0.038076  0.050680  0.061696  0.021872 -0.044223 -0.034821 -0.043401   \n",
      "1 -0.001882 -0.044642 -0.051474 -0.026328 -0.008449 -0.019163  0.074412   \n",
      "2  0.085299  0.050680  0.044451 -0.005670 -0.045599 -0.034194 -0.032356   \n",
      "3 -0.089063 -0.044642 -0.011595 -0.036656  0.012191  0.024991 -0.036038   \n",
      "4  0.005383 -0.044642 -0.036385  0.021872  0.003935  0.015596  0.008142   \n",
      "\n",
      "         s4        s5        s6  target  \n",
      "0 -0.002592  0.019907 -0.017646   151.0  \n",
      "1 -0.039493 -0.068332 -0.092204    75.0  \n",
      "2 -0.002592  0.002861 -0.025930   141.0  \n",
      "3  0.034309  0.022688 -0.009362   206.0  \n",
      "4 -0.002592 -0.031988 -0.046641   135.0  \n"
     ]
    }
   ],
   "source": [
    "#| label: 601_user_data_load\n",
    "# load the csv data set as a pandas dataframe and dislay the first 5 rows\n",
    "import pandas as pd\n",
    "data = pd.read_csv(\"./userData/data.csv\")\n",
    "print(data.head())"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "13c45481",
   "metadata": {},
   "source": [
    "Next, the data set is loaded as a `spotpython` `CSVDataset()` class. This step is necessary for the hyperparameter tuning process. \n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "user_data_load_csvdataset",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "442\n"
     ]
    }
   ],
   "source": [
    "#| label: 601_user_data_load_csvdataset\n",
    "from spotpython.data.csvdataset import CSVDataset\n",
    "import torch\n",
    "data_set = CSVDataset(directory=\"./userData/\",\n",
    "                     filename=\"data.csv\",\n",
    "                     target_column=\"target\",\n",
    "                     feature_type=torch.float32,\n",
    "                     target_type=torch.float32,\n",
    "                     rmNA=True)\n",
    "print(len(data_set))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5a894d41",
   "metadata": {},
   "source": [
    "The following step is not necessary for the hyperparameter tuning process, but it is useful for understanding the data. The data set is loaded as a `DataLoader` from `torch.utils.data` to check the data.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "user_data_dataloader",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Batch Size: 5\n",
      "Inputs Shape: torch.Size([5, 10])\n",
      "Targets Shape: torch.Size([5])\n",
      "---------------\n",
      "Inputs: tensor([[ 0.0381,  0.0507,  0.0617,  0.0219, -0.0442, -0.0348, -0.0434, -0.0026,\n",
      "          0.0199, -0.0176],\n",
      "        [-0.0019, -0.0446, -0.0515, -0.0263, -0.0084, -0.0192,  0.0744, -0.0395,\n",
      "         -0.0683, -0.0922],\n",
      "        [ 0.0853,  0.0507,  0.0445, -0.0057, -0.0456, -0.0342, -0.0324, -0.0026,\n",
      "          0.0029, -0.0259],\n",
      "        [-0.0891, -0.0446, -0.0116, -0.0367,  0.0122,  0.0250, -0.0360,  0.0343,\n",
      "          0.0227, -0.0094],\n",
      "        [ 0.0054, -0.0446, -0.0364,  0.0219,  0.0039,  0.0156,  0.0081, -0.0026,\n",
      "         -0.0320, -0.0466]])\n",
      "Targets: tensor([151.,  75., 141., 206., 135.])\n"
     ]
    }
   ],
   "source": [
    "#| label: 601_user_data_dataloader\n",
    "# Set batch size for DataLoader\n",
    "batch_size = 5\n",
    "# Create DataLoader\n",
    "from torch.utils.data import DataLoader\n",
    "dataloader = DataLoader(data_set, batch_size=batch_size, shuffle=False)\n",
    "\n",
    "# Iterate over the data in the DataLoader\n",
    "for batch in dataloader:\n",
    "    inputs, targets = batch\n",
    "    print(f\"Batch Size: {inputs.size(0)}\")\n",
    "    print(f\"Inputs Shape: {inputs.shape}\")\n",
    "    print(f\"Targets Shape: {targets.shape}\")\n",
    "    print(\"---------------\")\n",
    "    print(f\"Inputs: {inputs}\")\n",
    "    print(f\"Targets: {targets}\")\n",
    "    break"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "18121a79",
   "metadata": {},
   "source": [
    "Similar to the setting from @sec-basic-setup-601, the hyperparameter tuning setup is defined. Instead of using the `Diabetes` data set, the user data set is used. The `data_set` parameter is set to the user data set. The `fun_control` dictionary is set up via the `fun_control_init` function.\n",
    "\n",
    "Note, that we have modified the `fun_evals` parameter to 12 and the `init_size` to 7 to reduce the computational time for this example.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "user_data_setup",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Seed set to 123\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Seed set to 123\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "module_name: light\n",
      "submodule_name: regression\n",
      "model_name: NNLinearRegressor\n"
     ]
    }
   ],
   "source": [
    "#| label: 601_user_data_setup\n",
    "from spotpython.hyperdict.light_hyper_dict import LightHyperDict\n",
    "from spotpython.fun.hyperlight import HyperLight\n",
    "from spotpython.utils.init import (fun_control_init, surrogate_control_init, design_control_init)\n",
    "from spotpython.utils.eda import gen_design_table\n",
    "from spotpython.hyperparameters.values import set_hyperparameter\n",
    "from spotpython.spot import spot\n",
    "\n",
    "fun_control = fun_control_init(\n",
    "    PREFIX=\"601\",\n",
    "    fun_evals=12,\n",
    "    max_time=1,\n",
    "    data_set = data_set,\n",
    "    core_model_name=\"light.regression.NNLinearRegressor\",\n",
    "    hyperdict=LightHyperDict,\n",
    "    _L_in=10,\n",
    "    _L_out=1)\n",
    "\n",
    "design_control = design_control_init(init_size=7)\n",
    "\n",
    "set_hyperparameter(fun_control, \"initialization\", [\"Default\"])\n",
    "\n",
    "fun = HyperLight().fun\n",
    "\n",
    "spot_tuner = spot.Spot(fun=fun,fun_control=fun_control, design_control=design_control)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "user_data_run",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "GPU available: True (mps), used: True\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "TPU available: False, using: 0 TPU cores\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "HPU available: False, using: 0 HPUs\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\n",
      "  | Name   | Type       | Params | Mode  | In sizes | Out sizes\n",
      "---------------------------------------------------------------------\n",
      "0 | layers | Sequential | 169    | train | [4, 10]  | [4, 1]   \n",
      "---------------------------------------------------------------------\n",
      "169       Trainable params\n",
      "0         Non-trainable params\n",
      "169       Total params\n",
      "0.001     Total estimated model params size (MB)\n",
      "15        Modules in train mode\n",
      "0         Modules in eval mode\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "GPU available: True (mps), used: True\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "TPU available: False, using: 0 TPU cores\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "HPU available: False, using: 0 HPUs\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\n",
      "  | Name   | Type       | Params | Mode  | In sizes | Out sizes\n",
      "---------------------------------------------------------------------\n",
      "0 | layers | Sequential | 20.2 K | train | [8, 10]  | [8, 1]   \n",
      "---------------------------------------------------------------------\n",
      "20.2 K    Trainable params\n",
      "0         Non-trainable params\n",
      "20.2 K    Total params\n",
      "0.081     Total estimated model params size (MB)\n",
      "33        Modules in train mode\n",
      "0         Modules in eval mode\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "GPU available: True (mps), used: True\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "TPU available: False, using: 0 TPU cores\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "HPU available: False, using: 0 HPUs\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\n",
      "  | Name   | Type       | Params | Mode  | In sizes | Out sizes\n",
      "---------------------------------------------------------------------\n",
      "0 | layers | Sequential | 595    | train | [4, 10]  | [4, 1]   \n",
      "---------------------------------------------------------------------\n",
      "595       Trainable params\n",
      "0         Non-trainable params\n",
      "595       Total params\n",
      "0.002     Total estimated model params size (MB)\n",
      "33        Modules in train mode\n",
      "0         Modules in eval mode\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "train_model result: {'val_loss': nan, 'hp_metric': nan}\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "GPU available: True (mps), used: True\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "TPU available: False, using: 0 TPU cores\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "HPU available: False, using: 0 HPUs\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\n",
      "  | Name   | Type       | Params | Mode  | In sizes | Out sizes\n",
      "---------------------------------------------------------------------\n",
      "0 | layers | Sequential | 5.7 K  | train | [8, 10]  | [8, 1]   \n",
      "---------------------------------------------------------------------\n",
      "5.7 K     Trainable params\n",
      "0         Non-trainable params\n",
      "5.7 K     Total params\n",
      "0.023     Total estimated model params size (MB)\n",
      "33        Modules in train mode\n",
      "0         Modules in eval mode\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "train_model result: {'val_loss': 11897.9033203125, 'hp_metric': 11897.9033203125}\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "GPU available: True (mps), used: True\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "TPU available: False, using: 0 TPU cores\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "HPU available: False, using: 0 HPUs\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\n",
      "  | Name   | Type       | Params | Mode  | In sizes | Out sizes\n",
      "---------------------------------------------------------------------\n",
      "0 | layers | Sequential | 1.5 K  | train | [8, 10]  | [8, 1]   \n",
      "---------------------------------------------------------------------\n",
      "1.5 K     Trainable params\n",
      "0         Non-trainable params\n",
      "1.5 K     Total params\n",
      "0.006     Total estimated model params size (MB)\n",
      "23        Modules in train mode\n",
      "0         Modules in eval mode\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "train_model result: {'val_loss': 21722.76171875, 'hp_metric': 21722.76171875}\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "GPU available: True (mps), used: True\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "TPU available: False, using: 0 TPU cores\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "HPU available: False, using: 0 HPUs\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\n",
      "  | Name   | Type       | Params | Mode  | In sizes | Out sizes\n",
      "---------------------------------------------------------------------\n",
      "0 | layers | Sequential | 74.1 K | train | [2, 10]  | [2, 1]   \n",
      "---------------------------------------------------------------------\n",
      "74.1 K    Trainable params\n",
      "0         Non-trainable params\n",
      "74.1 K    Total params\n",
      "0.296     Total estimated model params size (MB)\n",
      "23        Modules in train mode\n",
      "0         Modules in eval mode\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "train_model result: {'val_loss': nan, 'hp_metric': nan}\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "GPU available: True (mps), used: True\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "TPU available: False, using: 0 TPU cores\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "HPU available: False, using: 0 HPUs\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\n",
      "  | Name   | Type       | Params | Mode  | In sizes | Out sizes\n",
      "---------------------------------------------------------------------\n",
      "0 | layers | Sequential | 1.7 K  | train | [16, 10] | [16, 1]  \n",
      "---------------------------------------------------------------------\n",
      "1.7 K     Trainable params\n",
      "0         Non-trainable params\n",
      "1.7 K     Total params\n",
      "0.007     Total estimated model params size (MB)\n",
      "33        Modules in train mode\n",
      "0         Modules in eval mode\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "train_model result: {'val_loss': 8.58584665870927e+27, 'hp_metric': 8.58584665870927e+27}\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "`Trainer.fit` stopped: `max_epochs=16` reached.\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "train_model result: {'val_loss': 23611.259765625, 'hp_metric': 23611.259765625}\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "GPU available: True (mps), used: True\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "TPU available: False, using: 0 TPU cores\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "HPU available: False, using: 0 HPUs\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\n",
      "  | Name   | Type       | Params | Mode  | In sizes | Out sizes\n",
      "---------------------------------------------------------------------\n",
      "0 | layers | Sequential | 1.7 K  | train | [8, 10]  | [8, 1]   \n",
      "---------------------------------------------------------------------\n",
      "1.7 K     Trainable params\n",
      "0         Non-trainable params\n",
      "1.7 K     Total params\n",
      "0.007     Total estimated model params size (MB)\n",
      "33        Modules in train mode\n",
      "0         Modules in eval mode\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "train_model result: {'val_loss': 10570.7265625, 'hp_metric': 10570.7265625}\n",
      "spotpython tuning: 10570.7265625 [####------] 41.67% \r\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "GPU available: True (mps), used: True\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "TPU available: False, using: 0 TPU cores\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "HPU available: False, using: 0 HPUs\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\n",
      "  | Name   | Type       | Params | Mode  | In sizes | Out sizes\n",
      "---------------------------------------------------------------------\n",
      "0 | layers | Sequential | 595    | train | [16, 10] | [16, 1]  \n",
      "---------------------------------------------------------------------\n",
      "595       Trainable params\n",
      "0         Non-trainable params\n",
      "595       Total params\n",
      "0.002     Total estimated model params size (MB)\n",
      "33        Modules in train mode\n",
      "0         Modules in eval mode\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "`Trainer.fit` stopped: `max_epochs=32` reached.\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "train_model result: {'val_loss': 22684.037109375, 'hp_metric': 22684.037109375}\n",
      "spotpython tuning: 10570.7265625 [#####-----] 50.00% \r\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "GPU available: True (mps), used: True\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "TPU available: False, using: 0 TPU cores\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "HPU available: False, using: 0 HPUs\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\n",
      "  | Name   | Type       | Params | Mode  | In sizes | Out sizes\n",
      "---------------------------------------------------------------------\n",
      "0 | layers | Sequential | 20.2 K | train | [4, 10]  | [4, 1]   \n",
      "---------------------------------------------------------------------\n",
      "20.2 K    Trainable params\n",
      "0         Non-trainable params\n",
      "20.2 K    Total params\n",
      "0.081     Total estimated model params size (MB)\n",
      "33        Modules in train mode\n",
      "0         Modules in eval mode\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "`Trainer.fit` stopped: `max_epochs=16` reached.\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "train_model result: {'val_loss': 22166.296875, 'hp_metric': 22166.296875}\n",
      "spotpython tuning: 10570.7265625 [######----] 58.33% \r\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "GPU available: True (mps), used: True\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "TPU available: False, using: 0 TPU cores\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "HPU available: False, using: 0 HPUs\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\n",
      "  | Name   | Type       | Params | Mode  | In sizes | Out sizes\n",
      "---------------------------------------------------------------------\n",
      "0 | layers | Sequential | 1.7 K  | train | [16, 10] | [16, 1]  \n",
      "---------------------------------------------------------------------\n",
      "1.7 K     Trainable params\n",
      "0         Non-trainable params\n",
      "1.7 K     Total params\n",
      "0.007     Total estimated model params size (MB)\n",
      "33        Modules in train mode\n",
      "0         Modules in eval mode\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "train_model result: {'val_loss': 23517.8671875, 'hp_metric': 23517.8671875}\n",
      "spotpython tuning: 10570.7265625 [#######---] 66.67% \r\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "GPU available: True (mps), used: True\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "TPU available: False, using: 0 TPU cores\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "HPU available: False, using: 0 HPUs\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\n",
      "  | Name   | Type       | Params | Mode  | In sizes | Out sizes\n",
      "---------------------------------------------------------------------\n",
      "0 | layers | Sequential | 20.2 K | train | [16, 10] | [16, 1]  \n",
      "---------------------------------------------------------------------\n",
      "20.2 K    Trainable params\n",
      "0         Non-trainable params\n",
      "20.2 K    Total params\n",
      "0.081     Total estimated model params size (MB)\n",
      "33        Modules in train mode\n",
      "0         Modules in eval mode\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "`Trainer.fit` stopped: `max_epochs=32` reached.\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "train_model result: {'val_loss': 14424.0830078125, 'hp_metric': 14424.0830078125}\n",
      "spotpython tuning: 10570.7265625 [########--] 75.00% \r\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "GPU available: True (mps), used: True\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "TPU available: False, using: 0 TPU cores\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "HPU available: False, using: 0 HPUs\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\n",
      "  | Name   | Type       | Params | Mode  | In sizes | Out sizes\n",
      "---------------------------------------------------------------------\n",
      "0 | layers | Sequential | 5.7 K  | train | [8, 10]  | [8, 1]   \n",
      "---------------------------------------------------------------------\n",
      "5.7 K     Trainable params\n",
      "0         Non-trainable params\n",
      "5.7 K     Total params\n",
      "0.023     Total estimated model params size (MB)\n",
      "33        Modules in train mode\n",
      "0         Modules in eval mode\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "`Trainer.fit` stopped: `max_epochs=32` reached.\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "train_model result: {'val_loss': 22907.083984375, 'hp_metric': 22907.083984375}\n",
      "spotpython tuning: 10570.7265625 [########--] 83.33% \r\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "| name           | type   | default   |   lower |   upper | tuned               | transform             |   importance | stars   |\n",
      "|----------------|--------|-----------|---------|---------|---------------------|-----------------------|--------------|---------|\n",
      "| l1             | int    | 3         |     3.0 |     8.0 | 5.0                 | transform_power_2_int |         0.00 |         |\n",
      "| epochs         | int    | 4         |     4.0 |     9.0 | 6.0                 | transform_power_2_int |         0.00 |         |\n",
      "| batch_size     | int    | 4         |     1.0 |     4.0 | 3.0                 | transform_power_2_int |         0.00 |         |\n",
      "| act_fn         | factor | ReLU      |     0.0 |     5.0 | ReLU                | None                  |         0.00 |         |\n",
      "| optimizer      | factor | SGD       |     0.0 |    11.0 | AdamW               | None                  |         0.00 |         |\n",
      "| dropout_prob   | float  | 0.01      |     0.0 |    0.25 | 0.11171374953356351 | None                  |         0.00 |         |\n",
      "| lr_mult        | float  | 1.0       |     0.1 |    10.0 | 7.505542615082221   | None                  |         0.00 |         |\n",
      "| patience       | int    | 2         |     2.0 |     6.0 | 3.0                 | transform_power_2_int |         7.21 | *       |\n",
      "| batch_norm     | factor | 0         |     0.0 |     1.0 | 1                   | None                  |       100.00 | ***     |\n",
      "| initialization | factor | Default   |     0.0 |     0.0 | Default             | None                  |         0.00 |         |\n",
      "l1:  0.004087690277892819\n",
      "epochs:  0.004087690277892819\n",
      "batch_size:  0.004087690277892819\n",
      "act_fn:  0.004087690277892819\n",
      "optimizer:  0.004087690277892819\n",
      "dropout_prob:  0.004087690277892819\n",
      "lr_mult:  0.004087690277892819\n",
      "patience:  7.206038810372332\n",
      "batch_norm:  100.0\n"
     ]
    },
    {
     "data": {
      "application/pdf": "",
      "text/plain": [
       "<Figure size 3600x1800 with 3 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/pdf": "",
      "text/plain": [
       "<Figure size 3600x1800 with 3 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/pdf": "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NjAwIDYwMCA2MDAKNjAwIDYwMCA2MDAgNjAwIDYwMCA2MDAgNjAwIDYwMCA2MDAgNjAwIDYwMCA2MDAgNjAwIDYwMCAzMTggNDAxIDQ2MCA4MzggNjM2Cjk1MCA3ODAgMjc1IDM5MCAzOTAgNTAwIDgzOCAzMTggMzYxIDMxOCAzMzcgNjM2IDYzNiA2MzYgNjM2IDYzNiA2MzYgNjM2IDYzNgo2MzYgNjM2IDMzNyAzMzcgODM4IDgzOCA4MzggNTMxIDEwMDAgNjg0IDY4NiA2OTggNzcwIDYzMiA1NzUgNzc1IDc1MiAyOTUKMjk1IDY1NiA1NTcgODYzIDc0OCA3ODcgNjAzIDc4NyA2OTUgNjM1IDYxMSA3MzIgNjg0IDk4OSA2ODUgNjExIDY4NSAzOTAgMzM3CjM5MCA4MzggNTAwIDUwMCA2MTMgNjM1IDU1MCA2MzUgNjE1IDM1MiA2MzUgNjM0IDI3OCAyNzggNTc5IDI3OCA5NzQgNjM0IDYxMgo2MzUgNjM1IDQxMSA1MjEgMzkyIDYzNCA1OTIgODE4IDU5MiA1OTIgNTI1IDYzNiAzMzcgNjM2IDgzOCA2MDAgNjM2IDYwMCAzMTgKMzUyIDUxOCAxMDAwIDUwMCA1MDAgNTAwIDEzNDIgNjM1IDQwMCAxMDcwIDYwMCA2ODUgNjAwIDYwMCAzMTggMzE4IDUxOCA1MTgKNTkwIDUwMCAxMDAwIDUwMCAxMDAwIDUyMSA0MDAgMTAyMyA2MDAgNTI1IDYxMSAzMTggNDAxIDYzNiA2MzYgNjM2IDYzNiAzMzcKNTAwIDUwMCAxMDAwIDQ3MSA2MTIgODM4IDM2MSAxMDAwIDUwMCA1MDAgODM4IDQwMSA0MDEgNTAwIDYzNiA2MzYgMzE4IDUwMAo0MDEgNDcxIDYxMiA5NjkgOTY5IDk2OSA1MzEgNjg0IDY4NCA2ODQgNjg0IDY4NCA2ODQgOTc0IDY5OCA2MzIgNjMyIDYzMiA2MzIKMjk1IDI5NSAyOTUgMjk1IDc3NSA3NDggNzg3IDc4NyA3ODcgNzg3IDc4NyA4MzggNzg3IDczMiA3MzIgNzMyIDczMiA2MTEgNjA1CjYzMCA2MTMgNjEzIDYxMyA2MTMgNjEzIDYxMyA5ODIgNTUwIDYxNSA2MTUgNjE1IDYxNSAyNzggMjc4IDI3OCAyNzggNjEyIDYzNAo2MTIgNjEyIDYxMiA2MTIgNjEyIDgzOCA2MTIgNjM0IDYzNCA2MzQgNjM0IDU5MiA2MzUgNTkyIF0KZW5kb2JqCjE2IDAgb2JqCjw8IC9hIDE3IDAgUiAvYyAxOCAwIFIgL2NvbG9uIDE5IDAgUiAvZSAyMCAwIFIgL2VpZ2h0IDIxIDAgUiAvZml2ZSAyMiAwIFIKL2ZvdXIgMjMgMCBSIC9pIDI0IDAgUiAvbCAyNSAwIFIgL24gMjYgMCBSIC9vbmUgMjcgMCBSIC9wIDI4IDAgUgovcGVyaW9kIDI5IDAgUiAvc2V2ZW4gMzAgMCBSIC9zaXggMzEgMCBSIC9zcGFjZSAzMiAwIFIgL3QgMzMgMCBSCi90aHJlZSAzNCAwIFIgL3R3byAzNSAwIFIgL3ggMzYgMCBSIC96ZXJvIDM3IDAgUiA+PgplbmRvYmoKMyAwIG9iago8PCAvRjEgMTUgMCBSID4+CmVuZG9iago0IDAgb2JqCjw8IC9BMSA8PCAvVHlwZSAvRXh0R1N0YXRlIC9DQSAwIC9jYSAxID4+Ci9BMiA8PCAvVHlwZSAvRXh0R1N0YXRlIC9DQSAxIC9jYSAxID4+Ci9BMyA8PCAvVHlwZSAvRXh0R1N0YXRlIC9DQSAwLjUgL2NhIDAuNSA+PgovQTQgPDwgL1R5cGUgL0V4dEdTdGF0ZSAvQ0EgMSAvY2EgMC45ID4+ID4+CmVuZG9iago1IDAgb2JqCjw8ID4+CmVuZG9iago2IDAgb2JqCjw8ID4+CmVuZG9iago3IDAgb2JqCjw8ID4+CmVuZG9iagoyIDAgb2JqCjw8IC9UeXBlIC9QYWdlcyAvS2lkcyBbIDExIDAgUiBdIC9Db3VudCAxID4+CmVuZG9iagozOCAwIG9iago8PCAvQ3JlYXRvciAoTWF0cGxvdGxpYiB2My45LjIsIGh0dHBzOi8vbWF0cGxvdGxpYi5vcmcpCi9Qcm9kdWNlciAoTWF0cGxvdGxpYiBwZGYgYmFja2VuZCB2My45LjIpCi9DcmVhdGlvbkRhdGUgKEQ6MjAyNDExMTcxMDIxMjcrMDInMDAnKSA+PgplbmRvYmoKeHJlZgowIDM5CjAwMDAwMDAwMDAgNjU1MzUgZiAKMDAwMDAwMDAxNiAwMDAwMCBuIAowMDAwMDM5MzMyIDAwMDAwIG4gCjAwMDAwMzkwNTQgMDAwMDAgbiAKMDAwMDAzOTA4NiAwMDAwMCBuIAowMDAwMDM5MjY5IDAwMDAwIG4gCjAwMDAwMzkyOTAgMDAwMDAgbiAKMDAwMDAzOTMxMSAwMDAwMCBuIAowMDAwMDAwMDY1IDAwMDAwIG4gCjAwMDAwMDAzNDUgMDAwMDAgbiAKMDAwMDAzMTgzMiAwMDAwMCBuIAowMDAwMDAwMjA4IDAwMDAwIG4gCjAwMDAwMzE4MTAgMDAwMDAgbiAKMDAwMDAzNzcyOSAwMDAwMCBuIAowMDAwMDM3NTIyIDAwMDAwIG4gCjAwMDAwMzcwNjYgMDAwMDAgbiAKMDAwMDAzODc4MiAwMDAwMCBuIAowMDAwMDMxODUyIDAwMDAwIG4gCjAwMDAwMzIyMzIgMDAwMDAgbiAKMDAwMDAzMjUzNyAwMDAwMCBuIAowMDAwMDMyNjgyIDAwMDAwIG4gCjAwMDAwMzMwMDQgMDAwMDAgbiAKMDAwMDAzMzQ3MiAwMDAwMCBuIAowMDAwMDMzNzk0IDAwMDAwIG4gCjAwMDAwMzM5NjAgMDAwMDAgbiAKMDAwMDAzNDEwNCAwMDAwMCBuIAowMDAwMDM0MjIzIDAwMDAwIG4gCjAwMDAwMzQ0NTkgMDAwMDAgbiAKMDAwMDAzNDYxNCAwMDAwMCBuIAowMDAwMDM0OTI2IDAwMDAwIG4gCjAwMDAwMzUwNDkgMDAwMDAgbiAKMDAwMDAzNTE5MSAwMDAwMCBuIAowMDAwMDM1NTg0IDAwMDAwIG4gCjAwMDAwMzU2NzQgMDAwMDAgbiAKMDAwMDAzNTg4MCAwMDAwMCBuIAowMDAwMDM2MjkzIDAwMDAwIG4gCjAwMDAwMzY2MTcgMDAwMDAgbiAKMDAwMDAzNjc3OCAwMDAwMCBuIAowMDAwMDM5MzkyIDAwMDAwIG4gCnRyYWlsZXIKPDwgL1NpemUgMzkgL1Jvb3QgMSAwIFIgL0luZm8gMzggMCBSID4+CnN0YXJ0eHJlZgozOTU0OQolJUVPRgo=",
      "text/plain": [
       "<Figure size 3600x1800 with 3 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#| label: 601_user_data_run\n",
    "res = spot_tuner.run()\n",
    "print(gen_design_table(fun_control=fun_control, spot=spot_tuner))\n",
    "spot_tuner.plot_important_hyperparameter_contour(max_imp=3)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0ab4dcdf",
   "metadata": {},
   "source": [
    "## Summary\n",
    "\n",
    "This section showed how to use user-specified data sets for the hyperparameter tuning process with `spotpython`. The user needs to provide the data set and load it as a `spotpython` `CSVDataset()` class."
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3",
   "path": "/Users/bartz/miniforge3/envs/spot312/share/jupyter/kernels/python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
