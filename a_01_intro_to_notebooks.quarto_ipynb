{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "c1570262",
   "metadata": {},
   "source": [
    "---\n",
    "execute:\n",
    "  cache: false\n",
    "  eval: true\n",
    "  echo: true\n",
    "  warning: false\n",
    "---\n",
    "\n",
    "\n",
    "# Introduction to Jupyter Notebook\n",
    "\n",
    "Jupyter Notebook is a widely used tool in the Data Science community. It is easy to use and the produced code can be run per cell. This has a huge advantage, because with other tools e.g. (pycharm, vscode, etc.) the whole script is executed. This can be a time consuming process, especially when working with huge data sets. \n",
    "\n",
    "## Different Notebook cells\n",
    "\n",
    "There are different cells that the notebook is currently supporting: \n",
    "\n",
    "- code cells \n",
    "\n",
    "- markdown cells \n",
    "\n",
    "- raw cells\n",
    "\n",
    "As a default, every cells in jupyter is set to \"code\"\n",
    "\n",
    "### Code cells\n",
    "\n",
    "The code cells are used to execute the code. They are following the logic of the choosen kernel. Therefore, it is important to keep in mind which programming language is currently used. Otherwise one might yield an error because of the wrong syntax. \n",
    "\n",
    "The code cells are executed my be **▶ Run** button (can be found in the header of the notebook).\n",
    "\n",
    "### Markdown cells\n",
    "\n",
    "The markdown cells are a usefull tool to comment the written code. Especially with the help of headers can the code be brought in a more readable format. \n",
    "If you are not familiar with the markdown syntax, you can find a usefull cheat sheet here: \n",
    "[Markdown Cheat Sheeet](https://www.ibm.com/docs/en/db2-event-store/2.0.0?topic=notebooks-markdown-jupyter-cheatsheet)\n",
    "\n",
    "### Raw cells\n",
    "\n",
    "The “Raw NBConvert” cell type can be used to render different code formats into HTML or LaTeX by Sphinx. This information is stored in the notebook metadata and converted appropriately. \n",
    "\n",
    "#### Usage\n",
    "\n",
    "To select a desired format from within Jupyter, select the cell containing your special code and choose options from the following dropdown menus:\n",
    "\n",
    "1. Select “Raw NBConvert”\n",
    "2. Switch the Cell Toolbar to “Raw Cell Format” (The cell toolbar can be found under View)\n",
    "3. Chose the appropriate “Raw NBConvert Format” within the cell\n",
    "\n",
    "Data Science is fun\n",
    "\n",
    "\n",
    "## Install Packages\n",
    "\n",
    "Because python is a heavily used programming language, there are many different packags that can make your life easier. Sadly, there are only a few standard packages that are already included in your python enviroment. If you have the need to install a new package in your enviroment, you can simply do that by exectuing the following code snippet in a **code cell**\n",
    "\n",
    "`!pip install numpy` \n",
    "\n",
    "- The *!* is used to run the cell as a shell command \n",
    "\n",
    "- *pip* is package manager for python packages.\n",
    "\n",
    "- *numpy* is the the package you want to install  \n",
    "\n",
    "\n",
    "**Hint:** It is often usefull to restart the kernel after installing a package, otherwise loading the package could lead to an error.\n",
    "\n",
    "## Load Packages\n",
    "\n",
    "After successfully installing the package it is necessary to import them before you can work with them. The import of the packages is done in the following way: \n",
    "\n",
    "`import numpy as np`\n",
    "\n",
    "The imported packages are often abbreviated. This is because you need to specify where the function is coming from. \n",
    "\n",
    "The most common abbreviations for data science packages are: \n",
    "\n",
    "\n",
    "| Abbreviation | Package | Import |\n",
    "| ----------- | ----------- | ----------- |\n",
    "| np | numpy | import numpy as np |\n",
    "| pd | pandas | import pandas as pd |\n",
    "| plt | matplotlib | import matplotlib.pyplot as plt |\n",
    "| px | plotly | import plotly.exprss as px |\n",
    "| tf | tensorflow | import tensorflow as tf |\n",
    "| sns | seaborn | import seaborn as sns |\n",
    "| dt | datetime | import datetime as dt |\n",
    "| pkl | pickle | import pickle as pkl |\n",
    ": Abbreviations for data science packages\n",
    "\n",
    "## Functions in Python\n",
    "\n",
    "Because python is not using Semicolon's it is import to keep track of indentation in your code. The indentation works as a placeholder for the semicolons. This is especially important if your are defining loops, functions, etc. ...\n",
    "\n",
    "**Example:** We are defining a function that calculates the squared sum of its input parameters\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "fb6b14a8",
   "metadata": {},
   "outputs": [],
   "source": [
    "def squared_sum(x,y): \n",
    "    z = x**2 + y**2\n",
    "    return z"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4b88be39",
   "metadata": {},
   "source": [
    "If you are working with something that needs indentation, it will be already done by the notebook. \n",
    "\n",
    "**Hint:** Keep in mind that is good practice to use the *return* parameter. If you are not using *return* and a function has multiple paramaters that you would like to return, it will only return the last one defined.  \n",
    "\n",
    "## List of Useful Jupyter Notebook Shortcuts\n",
    "\n",
    "\n",
    "| Function | Keyboard Shortcut | Menu Tools |\n",
    "| ----------- | ----------- | ----------- |\n",
    "| Save notebook | Esc + s | File → Save and Checkpoint |\n",
    "| Create new Cell | Esc + a (above), <br /> Esc + b (below) | Insert → Cell above;<br /> Insert → Cell below |\n",
    "| Run Cell | Ctrl + enter | Cell → Run Cell |\n",
    "| Copy Cell | c | Copy Key |\n",
    "| Paste Cell | v | Paste Key |\n",
    "| Interrupt Kernel | Esc + i i | Kernel → Interrupt |\n",
    "| Restart Kernel | Esc + 0 0 | Kernel → Restart |\n",
    ": List of useful Jupyter Notebook Shortcuts\n",
    "\n",
    "\n",
    "\n",
    "If you combine everything you can create beautiful graphics\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "2b46c7d9",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "application/pdf": "",
      "text/plain": [
       "<Figure size 1650x1050 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "import numpy as np\n",
    "\n",
    "# Generate 100 random data points along 3 dimensions\n",
    "x, y, scale = np.random.randn(3, 100)\n",
    "fig, ax = plt.subplots()\n",
    "\n",
    "# Map each onto a scatterplot we'll create with Matplotlib\n",
    "ax.scatter(x=x, y=y, c=scale, s=np.abs(scale)*500)\n",
    "ax.set(title=\"Some random data, created with the Jupyter Notebook!\")\n",
    "plt.show()"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3",
   "path": "/Users/bartz/miniforge3/envs/spot312/share/jupyter/kernels/python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.6"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
