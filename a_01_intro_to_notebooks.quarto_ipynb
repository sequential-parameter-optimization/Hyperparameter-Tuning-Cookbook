{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "4c7e06f7",
   "metadata": {},
   "source": [
    "---\n",
    "execute:\n",
    "  cache: false\n",
    "  eval: true\n",
    "  echo: true\n",
    "  warning: false\n",
    "---\n",
    "\n",
    "\n",
    "# Introduction to Jupyter Notebook\n",
    "\n",
    "Jupyter Notebook is a widely used tool in the Data Science community. It is easy to use and the produced code can be run per cell. This has a huge advantage, because with other tools e.g. (pycharm, vscode, etc.) the whole script is executed. This can be a time consuming process, especially when working with huge data sets. \n",
    "\n",
    "## Different Notebook cells\n",
    "\n",
    "There are different cells that the notebook is currently supporting: \n",
    "\n",
    "- code cells \n",
    "\n",
    "- markdown cells \n",
    "\n",
    "- raw cells\n",
    "\n",
    "As a default, every cells in jupyter is set to \"code\"\n",
    "\n",
    "### Code cells\n",
    "\n",
    "The code cells are used to execute the code. They are following the logic of the choosen kernel. Therefore, it is important to keep in mind which programming language is currently used. Otherwise one might yield an error because of the wrong syntax. \n",
    "\n",
    "The code cells are executed my be **▶ Run** button (can be found in the header of the notebook).\n",
    "\n",
    "### Markdown cells\n",
    "\n",
    "The markdown cells are a usefull tool to comment the written code. Especially with the help of headers can the code be brought in a more readable format. \n",
    "If you are not familiar with the markdown syntax, you can find a usefull cheat sheet here: \n",
    "[Markdown Cheat Sheeet](https://www.ibm.com/docs/en/db2-event-store/2.0.0?topic=notebooks-markdown-jupyter-cheatsheet)\n",
    "\n",
    "### Raw cells\n",
    "\n",
    "The “Raw NBConvert” cell type can be used to render different code formats into HTML or LaTeX by Sphinx. This information is stored in the notebook metadata and converted appropriately. \n",
    "\n",
    "#### Usage\n",
    "\n",
    "To select a desired format from within Jupyter, select the cell containing your special code and choose options from the following dropdown menus:\n",
    "\n",
    "1. Select “Raw NBConvert”\n",
    "2. Switch the Cell Toolbar to “Raw Cell Format” (The cell toolbar can be found under View)\n",
    "3. Chose the appropriate “Raw NBConvert Format” within the cell\n",
    "\n",
    "Data Science is fun\n",
    "\n",
    "\n",
    "## Install Packages\n",
    "\n",
    "Because python is a heavily used programming language, there are many different packags that can make your life easier. Sadly, there are only a few standard packages that are already included in your python enviroment. If you have the need to install a new package in your enviroment, you can simply do that by exectuing the following code snippet in a **code cell**\n",
    "\n",
    "`!pip install numpy` \n",
    "\n",
    "- The *!* is used to run the cell as a shell command \n",
    "\n",
    "- *pip* is package manager for python packages.\n",
    "\n",
    "- *numpy* is the the package you want to install  \n",
    "\n",
    "\n",
    "**Hint:** It is often usefull to restart the kernel after installing a package, otherwise loading the package could lead to an error.\n",
    "\n",
    "## Load Packages\n",
    "\n",
    "After successfully installing the package it is necessary to import them before you can work with them. The import of the packages is done in the following way: \n",
    "\n",
    "`import numpy as np`\n",
    "\n",
    "The imported packages are often abbreviated. This is because you need to specify where the function is coming from. \n",
    "\n",
    "The most common abbreviations for data science packages are: \n",
    "\n",
    "\n",
    "| Abbreviation | Package | Import |\n",
    "| ----------- | ----------- | ----------- |\n",
    "| np | numpy | import numpy as np |\n",
    "| pd | pandas | import pandas as pd |\n",
    "| plt | matplotlib | import matplotlib.pyplot as plt |\n",
    "| px | plotly | import plotly.exprss as px |\n",
    "| tf | tensorflow | import tensorflow as tf |\n",
    "| sns | seaborn | import seaborn as sns |\n",
    "| dt | datetime | import datetime as dt |\n",
    "| pkl | pickle | import pickle as pkl |\n",
    ": Abbreviations for data science packages\n",
    "\n",
    "## Functions in Python\n",
    "\n",
    "Because python is not using Semicolon's it is import to keep track of indentation in your code. The indentation works as a placeholder for the semicolons. This is especially important if your are defining loops, functions, etc. ...\n",
    "\n",
    "**Example:** We are defining a function that calculates the squared sum of its input parameters\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "a0063476",
   "metadata": {},
   "outputs": [],
   "source": [
    "def squared_sum(x,y): \n",
    "    z = x**2 + y**2\n",
    "    return z"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a35dee6d",
   "metadata": {},
   "source": [
    "If you are working with something that needs indentation, it will be already done by the notebook. \n",
    "\n",
    "**Hint:** Keep in mind that is good practice to use the *return* parameter. If you are not using *return* and a function has multiple paramaters that you would like to return, it will only return the last one defined.  \n",
    "\n",
    "## List of Useful Jupyter Notebook Shortcuts\n",
    "\n",
    "\n",
    "| Function | Keyboard Shortcut | Menu Tools |\n",
    "| ----------- | ----------- | ----------- |\n",
    "| Save notebook | Esc + s | File → Save and Checkpoint |\n",
    "| Create new Cell | Esc + a (above), <br /> Esc + b (below) | Insert → Cell above;<br /> Insert → Cell below |\n",
    "| Run Cell | Ctrl + enter | Cell → Run Cell |\n",
    "| Copy Cell | c | Copy Key |\n",
    "| Paste Cell | v | Paste Key |\n",
    "| Interrupt Kernel | Esc + i i | Kernel → Interrupt |\n",
    "| Restart Kernel | Esc + 0 0 | Kernel → Restart |\n",
    ": List of useful Jupyter Notebook Shortcuts\n",
    "\n",
    "\n",
    "\n",
    "If you combine everything you can create beautiful graphics\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "f01d1881",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "application/pdf": "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NjAwIDYwMCA2MDAgNjAwIDYwMCAzMTggNDAxIDQ2MCA4MzggNjM2Cjk1MCA3ODAgMjc1IDM5MCAzOTAgNTAwIDgzOCAzMTggMzYxIDMxOCAzMzcgNjM2IDYzNiA2MzYgNjM2IDYzNiA2MzYgNjM2IDYzNgo2MzYgNjM2IDMzNyAzMzcgODM4IDgzOCA4MzggNTMxIDEwMDAgNjg0IDY4NiA2OTggNzcwIDYzMiA1NzUgNzc1IDc1MiAyOTUKMjk1IDY1NiA1NTcgODYzIDc0OCA3ODcgNjAzIDc4NyA2OTUgNjM1IDYxMSA3MzIgNjg0IDk4OSA2ODUgNjExIDY4NSAzOTAgMzM3CjM5MCA4MzggNTAwIDUwMCA2MTMgNjM1IDU1MCA2MzUgNjE1IDM1MiA2MzUgNjM0IDI3OCAyNzggNTc5IDI3OCA5NzQgNjM0IDYxMgo2MzUgNjM1IDQxMSA1MjEgMzkyIDYzNCA1OTIgODE4IDU5MiA1OTIgNTI1IDYzNiAzMzcgNjM2IDgzOCA2MDAgNjM2IDYwMCAzMTgKMzUyIDUxOCAxMDAwIDUwMCA1MDAgNTAwIDEzNDIgNjM1IDQwMCAxMDcwIDYwMCA2ODUgNjAwIDYwMCAzMTggMzE4IDUxOCA1MTgKNTkwIDUwMCAxMDAwIDUwMCAxMDAwIDUyMSA0MDAgMTAyMyA2MDAgNTI1IDYxMSAzMTggNDAxIDYzNiA2MzYgNjM2IDYzNiAzMzcKNTAwIDUwMCAxMDAwIDQ3MSA2MTIgODM4IDM2MSAxMDAwIDUwMCA1MDAgODM4IDQwMSA0MDEgNTAwIDYzNiA2MzYgMzE4IDUwMAo0MDEgNDcxIDYxMiA5NjkgOTY5IDk2OSA1MzEgNjg0IDY4NCA2ODQgNjg0IDY4NCA2ODQgOTc0IDY5OCA2MzIgNjMyIDYzMiA2MzIKMjk1IDI5NSAyOTUgMjk1IDc3NSA3NDggNzg3IDc4NyA3ODcgNzg3IDc4NyA4MzggNzg3IDczMiA3MzIgNzMyIDczMiA2MTEgNjA1CjYzMCA2MTMgNjEzIDYxMyA2MTMgNjEzIDYxMyA5ODIgNTUwIDYxNSA2MTUgNjE1IDYxNSAyNzggMjc4IDI3OCAyNzggNjEyIDYzNAo2MTIgNjEyIDYxMiA2MTIgNjEyIDgzOCA2MTIgNjM0IDYzNCA2MzQgNjM0IDU5MiA2MzUgNTkyIF0KZW5kb2JqCjE2IDAgb2JqCjw8IC9KIDE3IDAgUiAvTiAxOCAwIFIgL1MgMTkgMCBSIC9hIDIwIDAgUiAvYiAyMSAwIFIgL2MgMjIgMCBSCi9jb21tYSAyMyAwIFIgL2QgMjQgMCBSIC9lIDI1IDAgUiAvZXhjbGFtIDI2IDAgUiAvaCAyNyAwIFIgL2kgMjggMCBSCi9rIDI5IDAgUiAvbSAzMCAwIFIgL24gMzIgMCBSIC9vIDMzIDAgUiAvb25lIDM0IDAgUiAvcCAzNSAwIFIgL3IgMzYgMCBSCi9zcGFjZSAzNyAwIFIgL3QgMzggMCBSIC90d28gMzkgMCBSIC91IDQwIDAgUiAvdyA0MSAwIFIgL3kgNDIgMCBSCi96ZXJvIDQzIDAgUiA+PgplbmRvYmoKMyAwIG9iago8PCAvRjEgMTUgMCBSID4+CmVuZG9iago0IDAgb2JqCjw8IC9BMSA8PCAvVHlwZSAvRXh0R1N0YXRlIC9DQSAwIC9jYSAxID4+Ci9BMiA8PCAvVHlwZSAvRXh0R1N0YXRlIC9DQSAxIC9jYSAxID4+ID4+CmVuZG9iago1IDAgb2JqCjw8ID4+CmVuZG9iago2IDAgb2JqCjw8ID4+CmVuZG9iago3IDAgb2JqCjw8IC9GMS1EZWphVnVTYW5zLW1pbnVzIDMxIDAgUiA+PgplbmRvYmoKMiAwIG9iago8PCAvVHlwZSAvUGFnZXMgL0tpZHMgWyAxMSAwIFIgXSAvQ291bnQgMSA+PgplbmRvYmoKNDQgMCBvYmoKPDwgL0NyZWF0b3IgKE1hdHBsb3RsaWIgdjMuOS4yLCBodHRwczovL21hdHBsb3RsaWIub3JnKQovUHJvZHVjZXIgKE1hdHBsb3RsaWIgcGRmIGJhY2tlbmQgdjMuOS4yKQovQ3JlYXRpb25EYXRlIChEOjIwMjQxMTE3MTA1MzA1KzAyJzAwJykgPj4KZW5kb2JqCnhyZWYKMCA0NQowMDAwMDAwMDAwIDY1NTM1IGYgCjAwMDAwMDAwMTYgMDAwMDAgbiAKMDAwMDAzMDI1OCAwMDAwMCBuIAowMDAwMDMwMDM2IDAwMDAwIG4gCjAwMDAwMzAwNjggMDAwMDAgbiAKMDAwMDAzMDE2NyAwMDAwMCBuIAowMDAwMDMwMTg4IDAwMDAwIG4gCjAwMDAwMzAyMDkgMDAwMDAgbiAKMDAwMDAwMDA2NSAwMDAwMCBuIAowMDAwMDAwMzQ1IDAwMDAwIG4gCjAwMDAwMjE1MzEgMDAwMDAgbiAKMDAwMDAwMDIwOCAwMDAwMCBuIAowMDAwMDIxNTA5IDAwMDAwIG4gCjAwMDAwMjg2ODEgMDAwMDAgbiAKMDAwMDAyODQ3NCAwMDAwMCBuIAowMDAwMDI4MDIwIDAwMDAwIG4gCjAwMDAwMjk3MzQgMDAwMDAgbiAKMDAwMDAyMTU1MSAwMDAwMCBuIAowMDAwMDIxNzM5IDAwMDAwIG4gCjAwMDAwMjE4ODggMDAwMDAgbiAKMDAwMDAyMjMwMiAwMDAwMCBuIAowMDAwMDIyNjgyIDAwMDAwIG4gCjAwMDAwMjI5OTkgMDAwMDAgbiAKMDAwMDAyMzMwNCAwMDAwMCBuIAowMDAwMDIzNDQ0IDAwMDAwIG4gCjAwMDAwMjM3NDggMDAwMDAgbiAKMDAwMDAyNDA3MCAwMDAwMCBuIAowMDAwMDI0MjI0IDAwMDAwIG4gCjAwMDAwMjQ0NjEgMDAwMDAgbiAKMDAwMDAyNDYwNSAwMDAwMCBuIAowMDAwMDI0NzYwIDAwMDAwIG4gCjAwMDAwMjUwOTEgMDAwMDAgbiAKMDAwMDAyNTI2MyAwMDAwMCBuIAowMDAwMDI1NDk5IDAwMDAwIG4gCjAwMDAwMjU3OTAgMDAwMDAgbiAKMDAwMDAyNTk0NSAwMDAwMCBuIAowMDAwMDI2MjU3IDAwMDAwIG4gCjAwMDAwMjY0OTAgMDAwMDAgbiAKMDAwMDAyNjU4MCAwMDAwMCBuIAowMDAwMDI2Nzg2IDAwMDAwIG4gCjAwMDAwMjcxMTAgMDAwMDAgbiAKMDAwMDAyNzM1NyAwMDAwMCBuIAowMDAwMDI3NTE4IDAwMDAwIG4gCjAwMDAwMjc3MzIgMDAwMDAgbiAKMDAwMDAzMDMxOCAwMDAwMCBuIAp0cmFpbGVyCjw8IC9TaXplIDQ1IC9Sb290IDEgMCBSIC9JbmZvIDQ0IDAgUiA+PgpzdGFydHhyZWYKMzA0NzUKJSVFT0YK",
      "text/plain": [
       "<Figure size 1650x1050 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "import numpy as np\n",
    "\n",
    "# Generate 100 random data points along 3 dimensions\n",
    "x, y, scale = np.random.randn(3, 100)\n",
    "fig, ax = plt.subplots()\n",
    "\n",
    "# Map each onto a scatterplot we'll create with Matplotlib\n",
    "ax.scatter(x=x, y=y, c=scale, s=np.abs(scale)*500)\n",
    "ax.set(title=\"Some random data, created with the Jupyter Notebook!\")\n",
    "plt.show()"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3",
   "path": "/Users/bartz/miniforge3/envs/spot312/share/jupyter/kernels/python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
