{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "8da4cd84",
   "metadata": {},
   "source": [
    "---\n",
    "execute:\n",
    "  cache: false\n",
    "  eval: true\n",
    "  echo: true\n",
    "  warning: false\n",
    "jupyter: python3\n",
    "---\n",
    "\n",
    "\n",
    "# `river` Hyperparameter Tuning: Hoeffding Tree Regressor with Friedman Drift Data\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "imports",
   "metadata": {},
   "outputs": [],
   "source": [
    "#| echo: false\n",
    "#| label: 024_imports\n",
    "import os\n",
    "from math import inf\n",
    "import numpy as np\n",
    "import warnings\n",
    "if not os.path.exists('./figures'):\n",
    "    os.makedirs('./figures')\n",
    "warnings.filterwarnings(\"ignore\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "09d7e56b",
   "metadata": {},
   "source": [
    "This chapter demonstrates hyperparameter tuning for `river`'s `Hoeffding Tree Regressor (HTR)` with the Friedman drift data set [[SOURCE]](https://riverml.xyz/0.18.0/api/datasets/synth/FriedmanDrift/). The `Hoeffding Tree Regressor` is a regression tree that uses the Hoeffding bound to limit the number of splits evaluated at each node, i.e., it predicts a real value for each sample.\n",
    "\n",
    "\n",
    "## The Friedman Drift Data Set {#sec-the-friedman-drift-data-set-24}\n",
    "\n",
    "We will use the Friedman synthetic dataset with concept drifts, which is described in detail in @sec-a-05-friedman.\n",
    "The following parameters are used to generate and handle the data set:\n",
    "\n",
    "* `position`: The positions of the concept drifts.\n",
    "* `n_train`: The number of samples used for training.\n",
    "* `n_test`: The number of samples used for testing.\n",
    "* `seed`: The seed for the random number generator.\n",
    "* `target_column`: The name of the target column.\n",
    "* `drift_type`: The type of the concept drift.\n",
    "\n",
    "We will use `spotRiver`'s `convert_to_df` function [[SOURCE]](https://github.com/sequential-parameter-optimization/spotRiver/blob/main/src/spotRiver/utils/data_conversion.py) to convert the `river` data set to a `pandas` data frame.\n",
    "Then we add column names x1 until x10 to the first 10 columns of the dataframe and the column name y to the last column of the dataframe.\n",
    "\n",
    "This data generation is independently repeated for the training and test data sets, because the data sets are generated with concept drifts and the usual train-test split would not work.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "data_set",
   "metadata": {},
   "outputs": [],
   "source": [
    "#| label: 024_data_set\n",
    "\n",
    "from river.datasets import synth\n",
    "import pandas as pd\n",
    "import numpy as np\n",
    "from spotRiver.utils.data_conversion import convert_to_df\n",
    "\n",
    "n_train = 6_000\n",
    "n_test = 4_000\n",
    "n_samples = n_train + n_test\n",
    "target_column = \"y\"\n",
    "\n",
    "dataset = synth.FriedmanDrift(\n",
    "   drift_type='gra',\n",
    "   position=(n_train/4, n_train/2),\n",
    "   seed=123\n",
    ")\n",
    "\n",
    "train = convert_to_df(dataset, n_total=n_train)\n",
    "train.columns = [f\"x{i}\" for i in range(1, 11)] + [target_column]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "data_set_testing",
   "metadata": {},
   "outputs": [],
   "source": [
    "#| label: 024_data_set_testing\n",
    "dataset = synth.FriedmanDrift(\n",
    "   drift_type='gra',\n",
    "   position=(n_test/4, n_test/2),\n",
    "   seed=123\n",
    ")\n",
    "test = convert_to_df(dataset, n_total=n_test)\n",
    "test.columns = [f\"x{i}\" for i in range(1, 11)] + [target_column]"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "987e00b0",
   "metadata": {},
   "source": [
    "::: {.callout-note}\n",
    "### The Data Set\n",
    "\n",
    "Data sets that are available as `pandas` dataframes can easily be passed to the `spot` hyperparameter tuner.\n",
    "`spotpython` requires a `train` and a `test` data set, where the column names must be identical.\n",
    ":::\n",
    "\n",
    "We combine the train and test data sets and save them to a csv file.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "save_data",
   "metadata": {},
   "outputs": [],
   "source": [
    "#| label: 024_save_data\n",
    "#| eval: false\n",
    "df = pd.concat([train, test])\n",
    "df.to_csv(\"./userData/friedman.csv\", index=False)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "734d9ac2",
   "metadata": {},
   "source": [
    "The Friedman Drift data set described in this section is avaialble as a `csv` data file and can be downloaded from github: [friedman.csv](https://github.com/sequential-parameter-optimization/Hyperparameter-Tuning-Cookbook/blob/main/userData/friedman.csv).\n",
    "\n",
    "\n",
    "## Setup\n",
    "\n",
    "### General Experiment Setup\n",
    "\n",
    "To keep track of the different experiments, we use a `PREFIX` for the experiment name. The `PREFIX` is used to create a unique experiment name. The `PREFIX` is also used to create a unique TensorBoard folder, which is used to store the TensorBoard log files.\n",
    "\n",
    "`spotpython` allows the specification of two different types of stopping criteria: first, the number of function evaluations (`fun_evals`), and second, the maximum run time in seconds (`max_time`). Here, we will set the number of function evaluations to infinity and the maximum run time to one minute.\n",
    "\n",
    "Furthermore, we set the initial design size (`init_size`) to 10. The initial design is used to train the surrogate model. The surrogate model is used to predict the performance of the hyperparameter configurations. The initial design is also used to train the first model. Since the `init_size` belongs to the experimental design, it is set in the `design_control` dictionary, see [[SOURCE]](https://sequential-parameter-optimization.github.io/spotPython/reference/spotPython/utils/init/#spotPython.utils.init.design_control_init).\n",
    "\n",
    "`max_time` is set to one minute for demonstration purposes and `init_size` is set to 10 for demonstration purposes. For real experiments, these values should be increased.\n",
    "Note,  the total run time may exceed the specified `max_time`, because the initial design is always evaluated, even if this takes longer than `max_time`.\n",
    "\n",
    "\n",
    "::: {.callout-note}\n",
    "### Summary: General Experiment Setup\n",
    "\n",
    "The following parameters are used to specify the general experiment setup:\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "sum_exp",
   "metadata": {},
   "outputs": [],
   "source": [
    "#| label: 024_sum_exp\n",
    "PREFIX = \"024\"\n",
    "fun_evals = inf\n",
    "max_time = 1\n",
    "init_size = 10"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5a0fca8c",
   "metadata": {},
   "source": [
    ":::\n",
    "\n",
    "\n",
    "### Data Setup\n",
    "\n",
    "We use the `StandardScaler` [[SOURCE]](https://riverml.xyz/dev/api/preprocessing/StandardScaler/) from `river` as the data-preprocessing model. The `StandardScaler` is used to standardize the data set, i.e., it has zero mean and unit variance.\n",
    "\n",
    "The names of the training and test data sets are `train` and `test`, respectively. They are available as `pandas` dataframes.\n",
    "Both must use the same column names. The column names were set to `x1` to `x10` for the features and `y` for the target column during the data set generation in @sec-the-friedman-drift-data-set-24. Therefore, the `target_column` is set to `y` (as above).\n",
    "\n",
    "::: {.callout-note}\n",
    "### Summary: Data Setup\n",
    "\n",
    "The following parameters are used to specify the data setup:\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "sum_data",
   "metadata": {},
   "outputs": [],
   "source": [
    "#| label: 024_sum_data\n",
    "prep_model_name = \"StandardScaler\"\n",
    "test = test\n",
    "train = train\n",
    "target_column = \"y\""
   ]
  },
  {
   "cell_type": "markdown",
   "id": "509f284b",
   "metadata": {},
   "source": [
    ":::\n",
    "\n",
    "### Evaluation Setup\n",
    "\n",
    "Here we use the `mean_absolute_error` [[SOURCE]](https://scikit-learn.org/stable/modules/generated/sklearn.metrics.mean_absolute_error.html) as the evaluation metric.\n",
    "Internally, this metric is passed to the objective (or loss) function `fun_oml_horizon` [[SOURCE]](https://github.com/sequential-parameter-optimization/spotRiver/blob/main/src/spotRiver/fun/hyperriver.py) and further to the evaluation function `eval_oml_horizon` [[SOURCE]](https://github.com/sequential-parameter-optimization/spotRiver/blob/main/src/spotRiver/evaluation/eval_bml.py).\n",
    "\n",
    "`spotRiver` also supports additional metrics. For example, the `metric_river` is used for the river based evaluation via `eval_oml_iter_progressive` [[SOURCE]](https://github.com/sequential-parameter-optimization/spotRiver/blob/main/src/spotRiver/evaluation/eval_oml.py). The `metric_river` is implemented to simulate the behaviour of the \"original\" `river` metrics.\n",
    "\n",
    "\n",
    "::: {.callout-note}\n",
    "### Summary: Evaluation Setup\n",
    "\n",
    "The following parameter are used to select the evaluation metric:\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "sum_eval",
   "metadata": {},
   "outputs": [],
   "source": [
    "#| label: 024_sum_eval\n",
    "metric_sklearn_name = \"mean_absolute_error\""
   ]
  },
  {
   "cell_type": "markdown",
   "id": "401443ec",
   "metadata": {},
   "source": [
    ":::\n",
    "\n",
    "\n",
    "### River-Specific Setup {#sec-river-specific-setup-24}\n",
    "\n",
    "In the online-machine-learning (OML) setup, the model is trained on a fixed number of observations and then evaluated on a fixed number of observations. The `horizon` defines the number of observations that are used for the evaluation. Here, a horizon of 7*24 is used, which corresponds to one week of data.\n",
    "\n",
    "The `oml_grace_period` defines the number of observations that are used for the initial training of the model.\n",
    "This value is relatively small, since the online-machine-learning is trained on the incoming data and the model is updated continuously.\n",
    "However, it needs a certain number of observations to start the training process.\n",
    "Therefore, this short training period aka `oml_grace_period` is set to the horizon, i.e., the number of observations that are used for the evaluation.\n",
    "In this case, we use a horizon of 7*24.\n",
    "\n",
    "The `weights` provide a flexible way to define specific requirements, e.g., if the memory is more important than the time, the weight for the memory can be increased. `spotRiver` stores information about the model' s score (metric), memory, and time. The hyperparamter tuner requires a single objective.\n",
    "Therefore, a weighted sum of the metric, memory, and time is computed. The weights are defined in the `weights` array.\n",
    "The `weights` provide a flexible way to define specific requirements, e.g., if the memory is more important than the time, the weight for the memory can be increased.\n",
    "\n",
    "The `weight_coeff` defines a multiplier for the results: results are multiplied by (step/n_steps)**weight_coeff, where n_steps is the total number of iterations.\n",
    "Results from the beginning have a lower weight than results from the end if weight_coeff > 1. If weight_coeff == 0, all results have equal weight. Note, that the `weight_coeff` is only used internally for the tuner and does not affect the results that are used for the evaluation or comparisons.\n",
    "\n",
    "::: {.callout-note}\n",
    "### Summary: River-Specific Setup\n",
    "\n",
    "The following parameters are used:\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "sum_river-setup",
   "metadata": {},
   "outputs": [],
   "source": [
    "#| label: 024_sum_river-setup\n",
    "horizon = 7*24\n",
    "oml_grace_period = 7*24\n",
    "weights = np.array([1, 0.01, 0.01])\n",
    "weight_coeff = 0.0"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ea18102b",
   "metadata": {},
   "source": [
    ":::\n",
    "\n",
    "\n",
    "### Model Setup\n",
    "\n",
    "By using `core_model_name = \"tree.HoeffdingTreeRegressor\"`, the `river` model class `HoeffdingTreeRegressor` [[SOURCE]](https://riverml.xyz/dev/api/tree/HoeffdingTreeRegressor/) from the `tree` module is selected.\n",
    "For a given `core_model_name`, the corresponding hyperparameters are automatically loaded from the associated dictionary, which is stored as a JSON file. The JSON file contains hyperparameter type information, names, and bounds. For `river` models, the hyperparameters are stored in the `RiverHyperDict`, see [[SOURCE]](https://github.com/sequential-parameter-optimization/spotRiver/blob/main/src/spotRiver/data/river_hyper_dict.json)\n",
    "\n",
    "Alternatively, you can load a local hyper_dict. Simply set `river_hyper_dict.json` as the filename. If `filename`is set to `None`, which is the default, the hyper_dict [[SOURCE]](https://github.com/sequential-parameter-optimization/spotRiver/blob/main/src/spotRiver/data/river_hyper_dict.json) is loaded from the `spotRiver` package.\n",
    "\n",
    "How hyperparameter levels can be modified is described in @sec-modifying-hyperparameter-levels.\n",
    "\n",
    "::: {.callout-note}\n",
    "### Summary: Model Setup\n",
    "\n",
    "The following parameters are used for the model setup:\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "sum_model-setup",
   "metadata": {},
   "outputs": [],
   "source": [
    "#| label: 024_sum_model-setup\n",
    "from spotRiver.fun.hyperriver import HyperRiver\n",
    "from spotRiver.hyperdict.river_hyper_dict import RiverHyperDict\n",
    "core_model_name = \"tree.HoeffdingTreeRegressor\"\n",
    "hyperdict = RiverHyperDict"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "31bf8f66",
   "metadata": {},
   "source": [
    ":::\n",
    "\n",
    "### Objective Function Setup\n",
    "\n",
    "The loss function (metric) values are passed to the objective function `fun_oml_horizon` [[SOURCE]](https://github.com/sequential-parameter-optimization/spotRiver/blob/main/src/spotRiver/fun/hyperriver.py), which combines information about the loss, required memory and time as described in @sec-river-specific-setup-24.\n",
    "\n",
    "\n",
    "::: {.callout-note}\n",
    "### Summary: Objective Function Setup\n",
    "\n",
    "The following parameters are used:\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "sum_fun-setup",
   "metadata": {},
   "outputs": [],
   "source": [
    "#| label: 024_sum_fun-setup\n",
    "fun = HyperRiver().fun_oml_horizon"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b73cb805",
   "metadata": {},
   "source": [
    "### Surrogate Model Setup\n",
    "\n",
    "The default surrogate model is the `Kriging` model, see [[SOURCE]](https://sequential-parameter-optimization.github.io/spotPython/reference/spotPython/build/kriging/). We specify `noise` as `True` to include noise in the model. An `anisotropic` kernel is used, which allows different length scales for each dimension, by setting `n_theta = 2`. Furthermore, the interval for the `Lambda` value is set to `[1e-3, 1e2]`.\n",
    "\n",
    "These parameters are set in the `surrogate_control` dictionary and therefore passed  to the `surrogate_control_init` function [[SOURCE]](https://sequential-parameter-optimization.github.io/spotPython/reference/spotPython/utils/init/#spotPython.utils.init.surrogate_control_init).\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "surrogate_control_setup",
   "metadata": {},
   "outputs": [],
   "source": [
    "#| label: 024_surrogate_control_setup\n",
    "noise = True\n",
    "n_theta = 2\n",
    "min_Lambda = 1e-3\n",
    "max_Lambda = 10"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2cb6857a",
   "metadata": {},
   "source": [
    ":::\n",
    "\n",
    "\n",
    "### Summary: Setting up the Experiment {#sec-summary-setting-up-the-experiment-24}\n",
    "\n",
    "At this stage, all required information is available to set up the dictionaries for the hyperparameter tuning.\n",
    "Altogether, the `fun_control`, `design_control`, `surrogate_control`, and `optimize_control` dictionaries are initialized as follows:\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "summary_control",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Seed set to 123\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Created spot_tensorboard_path: runs/spot_logs/024_bartz10_2024-06-26_18-34-30 for SummaryWriter()\n"
     ]
    }
   ],
   "source": [
    "#| label: 024_summary_control\n",
    "from spotPython.utils.init import fun_control_init, design_control_init, surrogate_control_init, optimizer_control_init\n",
    "\n",
    "fun = HyperRiver().fun_oml_horizon\n",
    "\n",
    "fun_control = fun_control_init(\n",
    "    PREFIX=\"024\",\n",
    "    fun_evals=inf,\n",
    "    max_time=1,\n",
    "\n",
    "    prep_model_name=\"StandardScaler\",\n",
    "    test=test,\n",
    "    train=train,\n",
    "    target_column=target_column,\n",
    "\n",
    "    metric_sklearn_name=\"mean_absolute_error\",\n",
    "    horizon=7*24,\n",
    "    oml_grace_period=7*24,\n",
    "    weight_coeff=0.0,\n",
    "    weights=np.array([1, 0.01, 0.01]),\n",
    "\n",
    "    core_model_name=\"tree.HoeffdingTreeRegressor\",\n",
    "    hyperdict=RiverHyperDict,\n",
    "   )\n",
    "\n",
    "\n",
    "design_control = design_control_init(\n",
    "    init_size=10,\n",
    ")\n",
    "\n",
    "surrogate_control = surrogate_control_init(\n",
    "    noise=True,\n",
    "    n_theta=2,\n",
    "    min_Lambda=1e-3,\n",
    "    max_Lambda=10,\n",
    ")\n",
    "\n",
    "optimizer_control = optimizer_control_init()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1c83c66c",
   "metadata": {},
   "source": [
    "### Run the `Spot` Optimizer\n",
    "\n",
    "The class `Spot` [[SOURCE]](https://github.com/sequential-parameter-optimization/spotPython/blob/main/src/spotPython/spot/spot.py) is the hyperparameter tuning workhorse. It is initialized with the following parameters, which were specified above.\n",
    "\n",
    "* `fun`: the objective function\n",
    "* `fun_control`: the dictionary with the control parameters for the objective function\n",
    "* `design_control`: the dictionary with the control parameters for the experimental design\n",
    "* `surrogate_control`: the dictionary with the control parameters for the surrogate model\n",
    "* `optimizer_control`: the dictionary with the control parameters for the optimizer\n",
    "\n",
    "`spotpython` allows maximum flexibility in the definition of the hyperparameter tuning setup. Alternative surrogate models, optimizers, and experimental designs can be used. Thus, interfaces for the `surrogate` model, experimental `design`, and `optimizer` are provided. The default surrogate model is the kriging model, the default optimizer is the differential evolution, and default experimental design is the Latin hypercube design.\n",
    "\n",
    "::: {.callout-note}\n",
    "### Summary: `Spot` Setup\n",
    "\n",
    "The following parameters are used for the `Spot` setup. These were specified above:\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "sum_spot-setup",
   "metadata": {},
   "outputs": [],
   "source": [
    "#| label: 024_sum_spot-setup\n",
    "fun = fun\n",
    "fun_control = fun_control\n",
    "design_control = design_control\n",
    "surrogate_control = surrogate_control\n",
    "optimizer_control = optimizer_control"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "6c22400c",
   "metadata": {},
   "source": [
    ":::\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "spot_run",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Seed set to 123\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "spotPython tuning: 3.197832854408985 [#---------] 9.23% \r\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "spotPython tuning: 2.2379912756278433 [##--------] 16.88% \r\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "spotPython tuning: 2.2379912756278433 [##--------] 20.83% \r\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "spotPython tuning: 2.2379912756278433 [##--------] 22.87% \r\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "spotPython tuning: 2.2379912756278433 [###-------] 27.45% \r\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "spotPython tuning: 2.2379912756278433 [###-------] 29.23% \r\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "spotPython tuning: 2.2379912756278433 [###-------] 33.19% \r\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "spotPython tuning: 2.2379912756278433 [####------] 35.36% \r\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "spotPython tuning: 2.2379912756278433 [####------] 39.22% \r\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "spotPython tuning: 2.1575823810916233 [#####-----] 53.15% \r\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "spotPython tuning: 2.1575823810916233 [########--] 82.40% \r\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "spotPython tuning: 2.1575823810916233 [##########] 100.00% Done...\r\n",
      "\r\n"
     ]
    }
   ],
   "source": [
    "#| label: 024_spot_run\n",
    "from spotPython.spot import spot\n",
    "spot_tuner = spot.Spot(\n",
    "    fun=fun,\n",
    "    fun_control=fun_control,\n",
    "    design_control=design_control,\n",
    "    surrogate_control=surrogate_control,\n",
    "    optimizer_control=optimizer_control,\n",
    ")\n",
    "res = spot_tuner.run()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "02304ce6",
   "metadata": {},
   "source": [
    "## Using the `spotgui`\n",
    "\n",
    "The `spotgui` [[github]](https://github.com/sequential-parameter-optimization/spotGUI) provides a convenient way to interact with the hyperparameter tuning process.\n",
    "To obtain the settings from @sec-summary-setting-up-the-experiment-24, the `spotgui` can be started as shown in @fig-spotgui.\n",
    "\n",
    "![spotgui](./figures_static/024_gui.png){width=100% #fig-spotgui}\n",
    "\n",
    "\n",
    "## Results\n",
    "\n",
    "After the hyperparameter tuning run is finished, the progress of the hyperparameter tuning can be visualized with `spotpython`'s method `plot_progress`. The black points represent the performace values (score or metric) of  hyperparameter configurations from the initial design, whereas the red points represents the  hyperparameter configurations found by the surrogate model based optimization.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "319cf04b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "application/pdf": "",
      "text/plain": [
       "<Figure size 2700x1800 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "spot_tuner.plot_progress(log_y=True, filename=None)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "7f4847ed",
   "metadata": {},
   "source": [
    "Results can be printed in tabular form.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "f647dec1",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "| name                   | type   | default          |   lower |   upper | tuned                | transform              |   importance | stars   |\n",
      "|------------------------|--------|------------------|---------|---------|----------------------|------------------------|--------------|---------|\n",
      "| grace_period           | int    | 200              |    10.0 |  1000.0 | 41.0                 | None                   |         0.84 | .       |\n",
      "| max_depth              | int    | 20               |     2.0 |    20.0 | 11.0                 | transform_power_2_int  |        28.58 | *       |\n",
      "| delta                  | float  | 1e-07            |   1e-08 |   1e-06 | 1e-06                | None                   |         2.28 | *       |\n",
      "| tau                    | float  | 0.05             |    0.01 |     0.1 | 0.029841297377565298 | None                   |         0.08 |         |\n",
      "| leaf_prediction        | factor | mean             |     0.0 |     2.0 | model                | None                   |        16.53 | *       |\n",
      "| leaf_model             | factor | LinearRegression |     0.0 |     2.0 | LinearRegression     | None                   |        17.03 | *       |\n",
      "| model_selector_decay   | float  | 0.95             |     0.9 |    0.99 | 0.9224227603147429   | None                   |         0.24 | .       |\n",
      "| splitter               | factor | EBSTSplitter     |     0.0 |     2.0 | TEBSTSplitter        | None                   |        13.30 | *       |\n",
      "| min_samples_split      | int    | 5                |     2.0 |    10.0 | 8.0                  | None                   |        15.51 | *       |\n",
      "| binary_split           | factor | 0                |     0.0 |     1.0 | 1                    | None                   |         5.78 | *       |\n",
      "| max_size               | float  | 500.0            |   100.0 |  1000.0 | 457.4471188493615    | None                   |         0.62 | .       |\n",
      "| memory_estimate_period | int    | 6                |     3.0 |     8.0 | 6.0                  | transform_power_10_int |        81.05 | **      |\n",
      "| stop_mem_management    | factor | 0                |     0.0 |     1.0 | 1                    | None                   |         0.53 | .       |\n",
      "| remove_poor_attrs      | factor | 0                |     0.0 |     1.0 | 1                    | None                   |       100.00 | ***     |\n",
      "| merit_preprune         | factor | 1                |     0.0 |     1.0 | 0                    | None                   |        39.42 | *       |\n"
     ]
    }
   ],
   "source": [
    "from spotPython.utils.eda import gen_design_table\n",
    "print(gen_design_table(fun_control=fun_control, spot=spot_tuner))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "28628be7",
   "metadata": {},
   "source": [
    "A histogram can be used to visualize the most important hyperparameters.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "5122b243",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "application/pdf": "",
      "text/plain": [
       "<Figure size 1650x1050 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "spot_tuner.plot_importance(threshold=10.0)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "76a2b4a9",
   "metadata": {},
   "source": [
    "## Performance of the Model with Default Hyperparameters\n",
    "\n",
    "### Get Default Hyperparameters and Fit the Model\n",
    "\n",
    "The default hyperparameters, which will be used for a comparion with the tuned hyperparameters, can be obtained with the following commands:\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "0064e3f8",
   "metadata": {},
   "outputs": [],
   "source": [
    "from spotPython.hyperparameters.values import get_default_hyperparameters_as_array\n",
    "X_start = get_default_hyperparameters_as_array(fun_control)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "addffbe3",
   "metadata": {},
   "source": [
    "`spotPython` tunes numpy arrays, i.e., the hyperparameters are stored in a numpy array.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "4d6830e4",
   "metadata": {},
   "outputs": [],
   "source": [
    "from spotPython.hyperparameters.values import get_one_core_model_from_X\n",
    "model_default = get_one_core_model_from_X(X_start, fun_control, default=True)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8d4a7a2b",
   "metadata": {},
   "source": [
    "### Evaluate the Model with Default Hyperparameters\n",
    "\n",
    "The model with the default hyperparameters can be trained and evaluated.\n",
    "The evaluation function `eval_oml_horizon` [[SOURCE]](https://github.com/sequential-parameter-optimization/spotRiver/blob/main/src/spotRiver/evaluation/eval_bml.py) is the same function that was used for the hyperparameter tuning.\n",
    "During the hyperparameter tuning, the evaluation function was called from the objective (or loss) function `fun_oml_horizon` [[SOURCE]](https://github.com/sequential-parameter-optimization/spotRiver/blob/main/src/spotRiver/fun/hyperriver.py).\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "eval_default",
   "metadata": {},
   "outputs": [],
   "source": [
    "#| label: 024_eval_default\n",
    "from spotRiver.evaluation.eval_bml import eval_oml_horizon\n",
    "\n",
    "df_eval_default, df_true_default = eval_oml_horizon(\n",
    "                    model=model_default,\n",
    "                    train=fun_control[\"train\"],\n",
    "                    test=fun_control[\"test\"],\n",
    "                    target_column=fun_control[\"target_column\"],\n",
    "                    horizon=fun_control[\"horizon\"],\n",
    "                    oml_grace_period=fun_control[\"oml_grace_period\"],\n",
    "                    metric=fun_control[\"metric_sklearn\"],\n",
    "                )"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2e1bce98",
   "metadata": {},
   "source": [
    "The three performance criteria, i.e., score (metric), runtime, and memory consumption, can be visualized with the following commands:\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "plot_bml_oml_horizon_metrics_default",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "application/pdf": "",
      "text/plain": [
       "<Figure size 3000x1500 with 3 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#| label: 024_plot_bml_oml_horizon_metrics_default\n",
    "from spotRiver.evaluation.eval_bml import plot_bml_oml_horizon_metrics, plot_bml_oml_horizon_predictions\n",
    "df_labels=[\"default\"]\n",
    "plot_bml_oml_horizon_metrics(df_eval = [df_eval_default], log_y=False, df_labels=df_labels, metric=fun_control[\"metric_sklearn\"])"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "be6a092c",
   "metadata": {},
   "source": [
    "### Show Predictions of the Model with Default Hyperparameters\n",
    "\n",
    "* Select a subset of the data set for the visualization of the predictions:\n",
    "    * We use the mean, $m$, of the data set as the center of the visualization.\n",
    "    * We use 100 data points, i.e., $m \\pm 50$ as the visualization window.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "plot_bml_oml_horizon_predictions_default",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "application/pdf": "",
      "text/plain": [
       "<Figure size 3000x1500 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#| label: 024_plot_bml_oml_horizon_predictions_default\n",
    "m = fun_control[\"test\"].shape[0]\n",
    "a = int(m/2)-50\n",
    "b = int(m/2)+50\n",
    "plot_bml_oml_horizon_predictions(df_true = [df_true_default[a:b]], target_column=target_column,  df_labels=df_labels)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ec0c7226",
   "metadata": {},
   "source": [
    "## Get SPOT Results\n",
    "\n",
    "In a similar way, we can obtain the hyperparameters found by `spotPython`.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "get_one_core_model_from_X",
   "metadata": {},
   "outputs": [],
   "source": [
    "#| label: 024_get_one_core_model_from_X\n",
    "from spotPython.hyperparameters.values import get_one_core_model_from_X\n",
    "X = spot_tuner.to_all_dim(spot_tuner.min_X.reshape(1,-1))\n",
    "model_spot = get_one_core_model_from_X(X, fun_control)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "eval_om_horizon",
   "metadata": {},
   "outputs": [],
   "source": [
    "#| label: 024_eval_om_horizon\n",
    "df_eval_spot, df_true_spot = eval_oml_horizon(\n",
    "                    model=model_spot,\n",
    "                    train=fun_control[\"train\"],\n",
    "                    test=fun_control[\"test\"],\n",
    "                    target_column=fun_control[\"target_column\"],\n",
    "                    horizon=fun_control[\"horizon\"],\n",
    "                    oml_grace_period=fun_control[\"oml_grace_period\"],\n",
    "                    metric=fun_control[\"metric_sklearn\"],\n",
    "                )"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "plot_bml_oml_horizon_metrics",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "application/pdf": "",
      "text/plain": [
       "<Figure size 3000x1500 with 3 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#| label: 024_plot_bml_oml_horizon_metrics\n",
    "df_labels=[\"default\", \"spot\"]\n",
    "plot_bml_oml_horizon_metrics(df_eval = [df_eval_default, df_eval_spot], log_y=False, df_labels=df_labels, metric=fun_control[\"metric_sklearn\"])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "plot_bml_oml_horizon_predictions",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "application/pdf": "",
      "text/plain": [
       "<Figure size 3000x1500 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#| label: 024_plot_bml_oml_horizon_predictions\n",
    "plot_bml_oml_horizon_predictions(df_true = [df_true_default[a:b], df_true_spot[a:b]], target_column=target_column,  df_labels=df_labels)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "plot_actual_vs_predicted",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "application/pdf": "",
      "text/plain": [
       "<Figure size 2400x1200 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/pdf": "",
      "text/plain": [
       "<Figure size 2400x1200 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#| label: 024_plot_actual_vs_predicted\n",
    "from spotPython.plot.validation import plot_actual_vs_predicted\n",
    "plot_actual_vs_predicted(y_test=df_true_default[target_column], y_pred=df_true_default[\"Prediction\"], title=\"Default\")\n",
    "plot_actual_vs_predicted(y_test=df_true_spot[target_column], y_pred=df_true_spot[\"Prediction\"], title=\"SPOT\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "10508314",
   "metadata": {},
   "source": [
    "## Visualize Regression Trees\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "model_default_learn_one",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "n_samples: 10000\n"
     ]
    }
   ],
   "source": [
    "#| label: 024_model_default_learn_one\n",
    "dataset_f = dataset.take(n_samples)\n",
    "print(f\"n_samples: {n_samples}\")\n",
    "for x, y in dataset_f:\n",
    "    model_default.learn_one(x, y)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "dedfb713",
   "metadata": {},
   "source": [
    ":::{.callout-caution}\n",
    "### Caution: Large Trees\n",
    "* Since the trees are large, the visualization is suppressed by default.\n",
    "* To visualize the trees, uncomment the following line.\n",
    ":::\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "9f18dfa5",
   "metadata": {},
   "outputs": [],
   "source": [
    "# model_default.draw()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "model_default_summary",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'n_nodes': 23,\n",
       " 'n_branches': 11,\n",
       " 'n_leaves': 12,\n",
       " 'n_active_leaves': 12,\n",
       " 'n_inactive_leaves': 0,\n",
       " 'height': 7,\n",
       " 'total_observed_weight': 14168.0}"
      ]
     },
     "execution_count": 29,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#| label: 024_model_default_summary\n",
    "model_default.summary"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "9c6681fc",
   "metadata": {},
   "source": [
    "### Spot Model\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "model_spot_learn_one",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "n_samples: 10000\n"
     ]
    }
   ],
   "source": [
    "#| label: 024_model_spot_learn_one\n",
    "print(f\"n_samples: {n_samples}\")\n",
    "dataset_f = dataset.take(n_samples)\n",
    "for x, y in dataset_f:\n",
    "    model_spot.learn_one(x, y)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "adfa89e9",
   "metadata": {},
   "source": [
    ":::{.callout-caution}\n",
    "### Caution: Large Trees\n",
    "* Since the trees are large, the visualization is suppressed by default.\n",
    "* To visualize the trees, uncomment the following line.\n",
    ":::\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "id": "39e11288",
   "metadata": {},
   "outputs": [],
   "source": [
    "# model_spot.draw()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "id": "model_spot_summary",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'n_nodes': 63,\n",
       " 'n_branches': 31,\n",
       " 'n_leaves': 32,\n",
       " 'n_active_leaves': 32,\n",
       " 'n_inactive_leaves': 0,\n",
       " 'height': 9,\n",
       " 'total_observed_weight': 14168.0}"
      ]
     },
     "execution_count": 32,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#| label: 024_model_spot_summary\n",
    "model_spot.summary"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "id": "compare_two_tree_models",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "| Parameter             |   Default |   Spot |\n",
      "|-----------------------|-----------|--------|\n",
      "| n_nodes               |        23 |     63 |\n",
      "| n_branches            |        11 |     31 |\n",
      "| n_leaves              |        12 |     32 |\n",
      "| n_active_leaves       |        12 |     32 |\n",
      "| n_inactive_leaves     |         0 |      0 |\n",
      "| height                |         7 |      9 |\n",
      "| total_observed_weight |     14168 |  14168 |\n"
     ]
    }
   ],
   "source": [
    "#| label: 024_compare_two_tree_models\n",
    "from spotPython.utils.eda import compare_two_tree_models\n",
    "print(compare_two_tree_models(model_default, model_spot))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "73516285",
   "metadata": {},
   "source": [
    "## Detailed Hyperparameter Plots\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "id": "plot_important_hyperparameter_contour",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "grace_period:  0.8424010847522222\n",
      "max_depth:  28.58461365557437\n",
      "delta:  2.281935715191219\n",
      "tau:  0.08265604218197888\n",
      "leaf_prediction:  16.53114238018759\n",
      "leaf_model:  17.028187090953267\n",
      "model_selector_decay:  0.24200522091259358\n",
      "splitter:  13.29549120710019\n",
      "min_samples_split:  15.512561447314138\n",
      "binary_split:  5.780722046908983\n",
      "max_size:  0.6212485714570428\n",
      "memory_estimate_period:  81.04902258265872\n",
      "stop_mem_management:  0.5267955978705136\n",
      "remove_poor_attrs:  100.0\n",
      "merit_preprune:  39.42228036651796\n",
      "impo: [['grace_period', 0.8424010847522222], ['max_depth', 28.58461365557437], ['delta', 2.281935715191219], ['tau', 0.08265604218197888], ['leaf_prediction', 16.53114238018759], ['leaf_model', 17.028187090953267], ['model_selector_decay', 0.24200522091259358], ['splitter', 13.29549120710019], ['min_samples_split', 15.512561447314138], ['binary_split', 5.780722046908983], ['max_size', 0.6212485714570428], ['memory_estimate_period', 81.04902258265872], ['stop_mem_management', 0.5267955978705136], ['remove_poor_attrs', 100.0], ['merit_preprune', 39.42228036651796]]\n",
      "indices: [13, 11, 14, 1, 5, 4, 8, 7, 9, 2, 0, 10, 12, 6, 3]\n",
      "indices after max_imp selection: [13, 11, 14]\n"
     ]
    },
    {
     "data": {
      "application/pdf": "",
      "text/plain": [
       "<Figure size 2700x1800 with 3 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/pdf": "",
      "text/plain": [
       "<Figure size 2700x1800 with 3 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/pdf": "",
      "text/plain": [
       "<Figure size 2700x1800 with 3 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#| label: 024_plot_important_hyperparameter_contour\n",
    "spot_tuner.plot_important_hyperparameter_contour(max_imp=3)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "dc3d2af1",
   "metadata": {},
   "source": [
    "## Parallel Coordinates Plots\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "id": "parallel_plot",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "        <script type=\"text/javascript\">\n",
       "        window.PlotlyConfig = {MathJaxConfig: 'local'};\n",
       "        if (window.MathJax && window.MathJax.Hub && window.MathJax.Hub.Config) {window.MathJax.Hub.Config({SVG: {font: \"STIX-Web\"}});}\n",
       "        if (typeof require !== 'undefined') {\n",
       "        require.undef(\"plotly\");\n",
       "        requirejs.config({\n",
       "            paths: {\n",
       "                'plotly': ['https://cdn.plot.ly/plotly-2.27.0.min']\n",
       "            }\n",
       "        });\n",
       "        require(['plotly'], function(Plotly) {\n",
       "            window._Plotly = Plotly;\n",
       "        });\n",
       "        }\n",
       "        </script>\n",
       "        "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div>                            <div id=\"964cf3cf-44ab-4f6e-bbfc-16f9cd1bcc1f\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>            <script type=\"text/javascript\">                require([\"plotly\"], function(Plotly) {                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"964cf3cf-44ab-4f6e-bbfc-16f9cd1bcc1f\")) {                    Plotly.newPlot(                        \"964cf3cf-44ab-4f6e-bbfc-16f9cd1bcc1f\",                        [{\"dimensions\":[{\"label\":\"grace_period\",\"range\":[41.0,920.0],\"values\":[41.0,443.0,315.0,573.0,159.0,853.0,920.0,244.0,707.0,631.0,454.0,41.0,457.0,874.0,150.0,433.0,228.0,339.0,271.0,41.0,591.0,215.0]},{\"label\":\"max_depth\",\"range\":[2.0,19.0],\"values\":[6.0,17.0,11.0,16.0,10.0,19.0,13.0,2.0,6.0,9.0,8.0,11.0,15.0,19.0,15.0,6.0,10.0,9.0,2.0,11.0,2.0,19.0]},{\"label\":\"delta\",\"range\":[8.308169881304712e-08,1e-06],\"values\":[9.781843725955115e-07,1.8504108932796457e-07,6.814038555482512e-07,3.0377735976094765e-07,7.459571804536548e-07,3.3235596837535405e-07,5.391267674759032e-07,8.308169881304712e-08,8.33737009307458e-07,4.078199136150284e-07,6.031084012756379e-07,4.61256421164826e-07,1.0825459672659594e-07,8.846839357304116e-07,5.773194345815644e-07,4.4512753206370647e-07,4.2437124099512245e-07,2.9998725433814425e-07,9.981715218071184e-07,1e-06,4.994027045755513e-07,7.033216422329215e-07]},{\"label\":\"tau\",\"range\":[0.01115924339653098,0.09220485312335583],\"values\":[0.08034065370371198,0.029807873842419258,0.09220485312335583,0.041529683423841945,0.06006303674598468,0.024131527116091782,0.08894166890701956,0.06680711427776338,0.04880566676356584,0.018923534503373002,0.06056859803229832,0.029789318028938194,0.01115924339653098,0.06654841347401935,0.04372102314907002,0.015542429041202102,0.05397557500271001,0.07991324786078033,0.08369584141459743,0.029841297377565298,0.04111324680641631,0.09170907286789826]},{\"label\":\"leaf_prediction\",\"range\":[0.0,2.0],\"values\":[2.0,1.0,0.0,0.0,2.0,1.0,1.0,0.0,1.0,2.0,0.0,1.0,2.0,0.0,1.0,0.0,1.0,1.0,1.0,1.0,1.0,1.0]},{\"label\":\"leaf_model\",\"range\":[0.0,2.0],\"values\":[1.0,1.0,0.0,0.0,1.0,1.0,1.0,2.0,2.0,2.0,1.0,0.0,2.0,1.0,1.0,1.0,1.0,1.0,1.0,0.0,0.0,2.0]},{\"label\":\"model_selector_decay\",\"range\":[0.9021916892686864,0.9876819374558142],\"values\":[0.9096898950177565,0.9435068640608333,0.9468266080213488,0.9876819374558142,0.9317758429064884,0.9021916892686864,0.9256361512228263,0.9693613684528104,0.958841605601552,0.9802765105524918,0.9708852117897216,0.9224303458948042,0.9082091302150613,0.9048962876385549,0.9388258332897351,0.9315293108478288,0.9442218632329994,0.9478169351223262,0.9554237640137918,0.9224227603147429,0.9551828562792138,0.9052668667184001]},{\"label\":\"splitter\",\"range\":[0.0,2.0],\"values\":[2.0,1.0,2.0,1.0,1.0,1.0,0.0,2.0,0.0,0.0,0.0,1.0,1.0,2.0,1.0,2.0,1.0,2.0,1.0,1.0,2.0,0.0]},{\"label\":\"min_samples_split\",\"range\":[2.0,9.0],\"values\":[8.0,2.0,7.0,7.0,9.0,4.0,9.0,5.0,6.0,3.0,7.0,8.0,3.0,9.0,9.0,9.0,5.0,9.0,6.0,8.0,6.0,6.0]},{\"label\":\"binary_split\",\"range\":[0.0,1.0],\"values\":[0.0,0.0,0.0,0.0,1.0,1.0,1.0,1.0,1.0,0.0,1.0,1.0,0.0,0.0,1.0,0.0,1.0,0.0,0.0,1.0,1.0,1.0]},{\"label\":\"max_size\",\"range\":[129.17853972511045,929.3793874030699],\"values\":[143.83265902934212,548.6594574915791,273.5661874038943,421.54311058453453,326.29227372280025,564.3260054041275,679.6675290579701,790.4300421266967,864.6471021526993,929.3793874030699,129.17853972511045,457.4471967733278,499.5757123552669,530.470892223377,251.93865843631065,677.2099948494039,314.6604204400594,909.3746256349401,337.9896501930739,457.4471188493615,685.1800577726956,834.1309207709382]},{\"label\":\"memory_estimate_period\",\"range\":[3.0,8.0],\"values\":[8.0,6.0,6.0,3.0,4.0,7.0,5.0,7.0,4.0,5.0,4.0,6.0,7.0,7.0,4.0,7.0,4.0,4.0,6.0,6.0,4.0,5.0]},{\"label\":\"stop_mem_management\",\"range\":[0.0,1.0],\"values\":[0.0,0.0,0.0,1.0,0.0,1.0,0.0,1.0,1.0,1.0,0.0,1.0,1.0,1.0,0.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0]},{\"label\":\"remove_poor_attrs\",\"range\":[0.0,1.0],\"values\":[0.0,1.0,0.0,1.0,1.0,0.0,0.0,1.0,0.0,1.0,0.0,1.0,0.0,1.0,0.0,1.0,1.0,1.0,0.0,1.0,0.0,1.0]},{\"label\":\"merit_preprune\",\"range\":[0.0,1.0],\"values\":[1.0,0.0,1.0,1.0,0.0,0.0,0.0,1.0,0.0,1.0,0.0,0.0,1.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0]}],\"line\":{\"cmax\":13.360077163405983,\"cmin\":2.1575823810916233,\"color\":[3.23732000403147,5.961374941592939,3.5500274436887063,3.3625182498734008,3.197832854408985,5.986875716090825,5.951360557207909,3.584068876584558,13.360077163405983,3.385863564110972,3.3897462758807033,2.2379912756278433,3.4311098541377048,3.6638828301077724,5.929998967227541,3.637250985022889,6.014014735902817,5.876633036419984,5.9636083540007805,2.1575823810916233,2.165963620279676,13.359301515100977],\"colorscale\":[[0.0,\"rgb(0,0,131)\"],[0.2,\"rgb(0,60,170)\"],[0.4,\"rgb(5,255,255)\"],[0.6,\"rgb(255,255,0)\"],[0.8,\"rgb(250,0,0)\"],[1.0,\"rgb(128,0,0)\"]],\"showscale\":true},\"type\":\"parcoords\"}],                        {\"template\":{\"data\":{\"histogram2dcontour\":[{\"type\":\"histogram2dcontour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"choropleth\":[{\"type\":\"choropleth\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"histogram2d\":[{\"type\":\"histogram2d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmap\":[{\"type\":\"heatmap\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmapgl\":[{\"type\":\"heatmapgl\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"contourcarpet\":[{\"type\":\"contourcarpet\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"contour\":[{\"type\":\"contour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"surface\":[{\"type\":\"surface\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"mesh3d\":[{\"type\":\"mesh3d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"scatter\":[{\"fillpattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2},\"type\":\"scatter\"}],\"parcoords\":[{\"type\":\"parcoords\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolargl\":[{\"type\":\"scatterpolargl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"scattergeo\":[{\"type\":\"scattergeo\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolar\":[{\"type\":\"scatterpolar\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"scattergl\":[{\"type\":\"scattergl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatter3d\":[{\"type\":\"scatter3d\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattermapbox\":[{\"type\":\"scattermapbox\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterternary\":[{\"type\":\"scatterternary\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattercarpet\":[{\"type\":\"scattercarpet\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}],\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}]},\"layout\":{\"autotypenumbers\":\"strict\",\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"hovermode\":\"closest\",\"hoverlabel\":{\"align\":\"left\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"bgcolor\":\"#E5ECF6\",\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"ternary\":{\"bgcolor\":\"#E5ECF6\",\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]]},\"xaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"yaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"geo\":{\"bgcolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"subunitcolor\":\"white\",\"showland\":true,\"showlakes\":true,\"lakecolor\":\"white\"},\"title\":{\"x\":0.05},\"mapbox\":{\"style\":\"light\"},\"margin\":{\"b\":0,\"l\":0,\"r\":0,\"t\":30}}}},                        {\"responsive\": true}                    ).then(function(){\n",
       "                            \n",
       "var gd = document.getElementById('964cf3cf-44ab-4f6e-bbfc-16f9cd1bcc1f');\n",
       "var x = new MutationObserver(function (mutations, observer) {{\n",
       "        var display = window.getComputedStyle(gd).display;\n",
       "        if (!display || display === 'none') {{\n",
       "            console.log([gd, 'removed!']);\n",
       "            Plotly.purge(gd);\n",
       "            observer.disconnect();\n",
       "        }}\n",
       "}});\n",
       "\n",
       "// Listen for the removal of the full notebook cells\n",
       "var notebookContainer = gd.closest('#notebook-container');\n",
       "if (notebookContainer) {{\n",
       "    x.observe(notebookContainer, {childList: true});\n",
       "}}\n",
       "\n",
       "// Listen for the clearing of the current output cell\n",
       "var outputEl = gd.closest('.output');\n",
       "if (outputEl) {{\n",
       "    x.observe(outputEl, {childList: true});\n",
       "}}\n",
       "\n",
       "                        })                };                });            </script>        </div>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#| label: 024_parallel_plot\n",
    "spot_tuner.parallel_plot()"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3",
   "path": "/Users/bartz/Library/Jupyter/kernels/python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
